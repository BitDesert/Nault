{"version":3,"file":"cpupow.worker.js","mappings":";;;;;;;;;AAAA;AACA;AACA;;AAEA,WAAW,mBAAO,CAAC,iBAAQ;;AAE3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uDAAuD,cAAc;;AAErE;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc,QAAQ;AACtB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc,QAAQ;AACtB;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,QAAQ;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,QAAQ;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB,kBAAkB;AACpC,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,wBAAwB;AACxB;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,gBAAgB;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AChRA;AACA;AACA;;AAEA,WAAW,mBAAO,CAAC,iBAAQ;;AAE3B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAc,OAAO,OAAO;AAC5B;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;;AAEA,cAAc,QAAQ,OAAO;AAC7B;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,OAAO;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB,kBAAkB;AACpC,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,gBAAgB;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AC7LA,UAAU,mBAAO,CAA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ACA;AACA,kCAAkC,uDAAuD;AACzyBAAyB;AACnC,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,SAAS;AACxC;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA,oCAAoC,mDAAmD,GAAG,EAAE;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uFAAuF,EAAE;AACzF;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,SAAS;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,0BAA0B;AAC5C;AACA;AACA,6BAA6B,6BAA6B;AAC1D;AACA;AACA;AACA;AACA,qFAAqF,EAAE;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA,kCAAkC,QAAQ;AAC1C;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA,iBAAiB,KAAK;AACtB;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,kBAAkB;AAC7C,2BAA2B,kBAAkB;AAC7C,2BAA2B,kBAAkB;AAC7C,2BAA2B,kBAAkB;AAC7C,2BAA2B,kBAAkB;AAC7C,2BAA2B,kBAAkB;AAC7C,8BAA8B,kBAAkB;AAChD,2BAA2B,kBAAkB;AAC7C;AACA,2BAA2B,kBAAkB;AAC7C,mCAAmC;AACnC,mCAAmC;AACnC,mCAAmC;AACnC,mCAAmC;AACnC,mCAAmC;AACnC,mCAAmC;AACnC,mCAAmC;AACnC,mCAAmC;AACnC;AACA;AACA;AACA;AACA,0BAA0B,wCAAwC;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,QAAQ;AACrC,gDAAgD,mDAAmD,GAAG,EAAE;AACxG;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,QAAQ;AACpC,+CAA+C,mDAAmD,GAAG,EAAE;AACvG;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA,gDAAgD,mDAAmD,GAAG,EAAE;AACxG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,oBAAoB,iBAAiB;AACrC;AACA,uCAAuC,kEAAkE,GAAG,EAAE;AAC9G;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,SAAS;AAC9B,2DAA2D,EAAE;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,0BAA0B,QAAQ;AAClC,6CAA6C,mDAAmD,GAAG,EAAE;AACrG;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,QAAQ;AACpC,+CAA+C,mDAAmD,GAAG,EAAE;AACvG;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,uDAAuD,EAAE;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB,mDAAmD,EAAE;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA,kDAAkD,EAAE;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA,8CAA8C,EAAE;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,cAAc;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA,oCAAoC,mDAAmD,GAAG,GAAG;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,MAAM;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,mBAAmB,MAAM;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,YAAY;AAC3B;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,wBAAwB,YAAY;AACpC;AACA;AACA,gCAAgC,SAAS;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA,aAAa,gBAAgB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB,kCAAkC,QAAQ;AAC1C;AACA;AACA;AACA,sBAAsB,gBAAgB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,cAAc;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,oBAAoB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,SAAS;AACvC;AACA;AACA,gCAAgC,QAAQ;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,IAAI;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA,4BAA4B,QAAQ;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,KAAK;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,uBAAuB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,WAAW;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,SAAS;AAC1C;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,0CAA0C,KAAK;AAC/C,YAAY;AACZ;AACA;AACA;AACA,qBAAqB,KAAK;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,iBAAiB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,SAAS;AACtB;AACA;AACA,qBAAqB,SAAS;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,EAAE;AACjD,4CAA4C,GAAG,SAAS,EAAE;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,SAAS;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,0BAA0B,SAAS;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,uCAAuC,SAAS;AAChD;AACA,4BAA4B,SAAS;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,eAAe;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA,oCAAoC,mDAAmD,GAAG,MAAM;AAChG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,aAAa;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,yBAAyB;AACnC,YAAY,yBAAyB;AACrC;AACA,oDAAoD,EAAE;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA,oCAAoC,mDAAmoBAAoB,KAAK;AACzB;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,wBAAwB,OAAO;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,KAAK;AAC7B;AACA;AACA;AACA,aAAa,MAAM;AACnB;AACA;AACA,sBAAsB,eAAe;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,YAAY;AACzmCAAmC,KAAK;AACxC;AACA;AACA;AACA;AACA,oBAAoB,SAAS;AAC7B;AACA;AACA;AACA;AACA,iCAAiC,MAAM;AACveAAe,KAAK;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,EAAE;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B;AACA,aAAa,QAAQ;AACrB;AACA,oCAAoC,mDAAmD,GAAG,MAAM;AAChG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,aAAa;AAC5B;AACA;AACA,uBAAuB,SAAS;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,QAAQ;AAClB;AACA,oCAAoC,mDAAmD,GAAG,EAAE;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA,gDAAgD,KAAK,MAAM,IAAI;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA,oCAAoC,mDAAmD,GAAG,MAAM;AAChG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA,oCAAoC,mDAAmD,GAAG,MAAM;AAChG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,iBAAiB,QAAQ;AACzB;AACA,oCAAoC,mDAAmD,GAAG,MAAM;AAChG,mDAAmD,OAAO;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,UAAU;AACV;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,WAAW;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,yBAAyB;AACtC;AACA,oCAAoC,6BAA6B,GAAG,GAAG;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA,oCAAoC,mDAAmD,GAAG,MAAM;AAChG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA,gCAAgC,mDAAmD,GAAG,EAAE;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB;AACA;AACA,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA,uBAAuB,yBAAyB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,KAAK;AAC9B;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,+BAA+B,KAAK;AACpC;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,IAAyC;AAC/C,IAAI,mCAAO,cAAc,mBAAmB;AAAA,kGAAC;AAC7C;AACA;AACA,IAAI,KAAK,EAUN;AACH,CAAC;;;;;;;;;;;ACr1FD;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;;AAEA,oCAAoC,yBAAyB,SAAS,yBAAyB;;;;;;;;;;ACpC/F;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;ACNA,MAAMuT,YAAY,GAAG5G,mBAAO,CAAC,uBAAD,CAA5B,EACA;;;AACAxJ,IAAI,CAACqQ,gBAAL,CAAsB,SAAtB;AAAA,+BAAiC,WAAO9H,OAAP,EAAmB;AAClD,UAAM;AAAEkC,MAAAA,SAAF;AAAaK,MAAAA,WAAb;AAA0BC,MAAAA,WAA1B;AAAuCC,MAAAA;AAAvC,QAAyDzC,OAAO,CAAC+H,IAAvE;AACA,UAAMC,MAAM,SAASH,YAAY,CAACX,WAAb,CAAyBhF,SAAzB,EAAoC;AAAEO,MAAAA,aAAF;AAAiBF,MAAAA,WAAjB;AAA8BC,MAAAA;AAA9B,KAApC,CAArB;AACA/K,IAAAA,IAAI,CAACwQ,WAAL,CAAiBD,MAAjB;AACD,GAJD;;AAAA;AAAA;AAAA;AAAA,K","sources":["./node_modules/blakejs/blake2b.js","./node_modules/blakejs/blake2s.js","./node_modules/blakejs/index.js","./node_modules/blakejs/util.js","./node_modules/nanocurrency/dist/nanocurrency.esm.js","./node_modules/nanocurrency/node_modules/bignumber.js/bignumber.js","./node_modules/@babel/runtime/helpers/asyncToGenerator.js","ignored|/Users/esteban/Desktop/nault-pro/node_modules/nanocurrency/dist|crypto","ignored|/Users/esteban/Desktop/nault-pro/node_modules/nanocurrency/dist|fs","ignored|/Users/esteban/Desktop/nault-pro/node_modules/nanocurrency/dist|path","ignored|/Users/esteban/Desktop/nault-pro/node_modules/nanocurrency/dist|util","webpack/bootstrap","webpack/runtime/compat get default export","webpack/runtime/define property getters","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","./src/assets/lib/cpupow.js"],"sourcesContent":["// Blake2B in pure Javascript\n// Adapted from the reference implementation in RFC7693\n// Ported to Javascript by DC - https://github.com/dcposch\n\nvar util = require('./util')\n\n// 64-bit unsigned addition\n// Sets v[a,a+1] += v[b,b+1]\n// v should be a Uint32Array\nfunction ADD64AA (v, a, b) {\n  var o0 = v[a] + v[b]\n  var o1 = v[a + 1] + v[b + 1]\n  if (o0 >= 0x100000000) {\n    o1++\n  }\n  v[a] = o0\n  v[a + 1] = o1\n}\n\n// 64-bit unsigned addition\n// Sets v[a,a+1] += b\n// b0 is the low 32 bits of b, b1 represents the high 32 bits\nfunction ADD64AC (v, a, b0, b1) {\n  var o0 = v[a] + b0\n  if (b0 < 0) {\n    o0 += 0x100000000\n  }\n  var o1 = v[a + 1] + b1\n  if (o0 >= 0x100000000) {\n    o1++\n  }\n  v[a] = o0\n  v[a + 1] = o1\n}\n\n// Little-endian byte access\nfunction B2B_GET32 (arr, i) {\n  return (arr[i] ^\n  (arr[i + 1] << 8) ^\n  (arr[i + 2] << 16) ^\n  (arr[i + 3] << 24))\n}\n\n// G Mixing function\n// The ROTRs are inlined for speed\nfunction B2B_G (a, b, c, d, ix, iy) {\n  var x0 = m[ix]\n  var x1 = m[ix + 1]\n  var y0 = m[iy]\n  var y1 = m[iy + 1]\n\n  ADD64AA(v, a, b) // v[a,a+1] += v[b,b+1] ... in JS we must store a uint64 as two uint32s\n  ADD64AC(v, a, x0, x1) // v[a, a+1] += x ... x0 is the low 32 bits of x, x1 is the high 32 bits\n\n  // v[d,d+1] = (v[d,d+1] xor v[a,a+1]) rotated to the right by 32 bits\n  var xor0 = v[d] ^ v[a]\n  var xor1 = v[d + 1] ^ v[a + 1]\n  v[d] = xor1\n  v[d + 1] = xor0\n\n  ADD64AA(v, c, d)\n\n  // v[b,b+1] = (v[b,b+1] xor v[c,c+1]) rotated right by 24 bits\n  xor0 = v[b] ^ v[c]\n  xor1 = v[b + 1] ^ v[c + 1]\n  v[b] = (xor0 >>> 24) ^ (xor1 << 8)\n  v[b + 1] = (xor1 >>> 24) ^ (xor0 << 8)\n\n  ADD64AA(v, a, b)\n  ADD64AC(v, a, y0, y1)\n\n  // v[d,d+1] = (v[d,d+1] xor v[a,a+1]) rotated right by 16 bits\n  xor0 = v[d] ^ v[a]\n  xor1 = v[d + 1] ^ v[a + 1]\n  v[d] = (xor0 >>> 16) ^ (xor1 << 16)\n  v[d + 1] = (xor1 >>> 16) ^ (xor0 << 16)\n\n  ADD64AA(v, c, d)\n\n  // v[b,b+1] = (v[b,b+1] xor v[c,c+1]) rotated right by 63 bits\n  xor0 = v[b] ^ v[c]\n  xor1 = v[b + 1] ^ v[c + 1]\n  v[b] = (xor1 >>> 31) ^ (xor0 << 1)\n  v[b + 1] = (xor0 >>> 31) ^ (xor1 << 1)\n}\n\n// Initialization Vector\nvar BLAKE2B_IV32 = new Uint32Array([\n  0xF3BCC908, 0x6A09E667, 0x84CAA73B, 0xBB67AE85,\n  0xFE94F82B, 0x3C6EF372, 0x5F1D36F1, 0xA54FF53A,\n  0xADE682D1, 0x510E527F, 0x2B3E6C1F, 0x9B05688C,\n  0xFB41BD6B, 0x1F83D9AB, 0x137E2179, 0x5BE0CD19\n])\n\nvar SIGMA8 = [\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3,\n  11, 8, 12, 0, 5, 2, 15, 13, 10, 14, 3, 6, 7, 1, 9, 4,\n  7, 9, 3, 1, 13, 12, 11, 14, 2, 6, 5, 10, 4, 0, 15, 8,\n  9, 0, 5, 7, 2, 4, 10, 15, 14, 1, 11, 12, 6, 8, 3, 13,\n  2, 12, 6, 10, 0, 11, 8, 3, 4, 13, 7, 5, 15, 14, 1, 9,\n  12, 5, 1, 15, 14, 13, 4, 10, 0, 7, 6, 3, 9, 2, 8, 11,\n  13, 11, 7, 14, 12, 1, 3, 9, 5, 0, 15, 4, 8, 6, 2, 10,\n  6, 15, 14, 9, 11, 3, 0, 8, 12, 2, 13, 7, 1, 4, 10, 5,\n  10, 2, 8, 4, 7, 6, 1, 5, 15, 11, 9, 14, 3, 12, 13, 0,\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3\n]\n\n// These are offsets into a uint64 buffer.\n// Multiply them all by 2 to make them offsets into a uint32 buffer,\n// because this is Javascript and we don't have uint64s\nvar SIGMA82 = new Uint8Array(SIGMA8.map(function (x) { return x * 2 }))\n\n// Compression function. 'last' flag indicates last block.\n// Note we're representing 16 uint64s as 32 uint32s\nvar v = new Uint32Array(32)\nvar m = new Uint32Array(32)\nfunction blake2bCompress (ctx, last) {\n  var i = 0\n\n  // init work variables\n  for (i = 0; i < 16; i++) {\n    v[i] = ctx.h[i]\n    v[i + 16] = BLAKE2B_IV32[i]\n  }\n\n  // low 64 bits of offset\n  v[24] = v[24] ^ ctx.t\n  v[25] = v[25] ^ (ctx.t / 0x100000000)\n  // high 64 bits not supported, offset may not be higher than 2**53-1\n\n  // last block flag set ?\n  if (last) {\n    v[28] = ~v[28]\n    v[29] = ~v[29]\n  }\n\n  // get little-endian words\n  for (i = 0; i < 32; i++) {\n    m[i] = B2B_GET32(ctx.b, 4 * i)\n  }\n\n  // twelve rounds of mixing\n  // uncomment the DebugPrint calls to log the computation\n  // and match the RFC sample documentation\n  // util.debugPrint('          m[16]', m, 64)\n  for (i = 0; i < 12; i++) {\n    // util.debugPrint('   (i=' + (i < 10 ? ' ' : '') + i + ') v[16]', v, 64)\n    B2B_G(0, 8, 16, 24, SIGMA82[i * 16 + 0], SIGMA82[i * 16 + 1])\n    B2B_G(2, 10, 18, 26, SIGMA82[i * 16 + 2], SIGMA82[i * 16 + 3])\n    B2B_G(4, 12, 20, 28, SIGMA82[i * 16 + 4], SIGMA82[i * 16 + 5])\n    B2B_G(6, 14, 22, 30, SIGMA82[i * 16 + 6], SIGMA82[i * 16 + 7])\n    B2B_G(0, 10, 20, 30, SIGMA82[i * 16 + 8], SIGMA82[i * 16 + 9])\n    B2B_G(2, 12, 22, 24, SIGMA82[i * 16 + 10], SIGMA82[i * 16 + 11])\n    B2B_G(4, 14, 16, 26, SIGMA82[i * 16 + 12], SIGMA82[i * 16 + 13])\n    B2B_G(6, 8, 18, 28, SIGMA82[i * 16 + 14], SIGMA82[i * 16 + 15])\n  }\n  // util.debugPrint('   (i=12) v[16]', v, 64)\n\n  for (i = 0; i < 16; i++) {\n    ctx.h[i] = ctx.h[i] ^ v[i] ^ v[i + 16]\n  }\n  // util.debugPrint('h[8]', ctx.h, 64)\n}\n\n// Creates a BLAKE2b hashing context\n// Requires an output length between 1 and 64 bytes\n// Takes an optional Uint8Array key\nfunction blake2bInit (outlen, key) {\n  if (outlen === 0 || outlen > 64) {\n    throw new Error('Illegal output length, expected 0 < length <= 64')\n  }\n  if (key && key.length > 64) {\n    throw new Error('Illegal key, expected Uint8Array with 0 < length <= 64')\n  }\n\n  // state, 'param block'\n  var ctx = {\n    b: new Uint8Array(128),\n    h: new Uint32Array(16),\n    t: 0, // input count\n    c: 0, // pointer within buffer\n    outlen: outlen // output length in bytes\n  }\n\n  // initialize hash state\n  for (var i = 0; i < 16; i++) {\n    ctx.h[i] = BLAKE2B_IV32[i]\n  }\n  var keylen = key ? key.length : 0\n  ctx.h[0] ^= 0x01010000 ^ (keylen << 8) ^ outlen\n\n  // key the hash, if applicable\n  if (key) {\n    blake2bUpdate(ctx, key)\n    // at the end\n    ctx.c = 128\n  }\n\n  return ctx\n}\n\n// Updates a BLAKE2b streaming hash\n// Requires hash context and Uint8Array (byte array)\nfunction blake2bUpdate (ctx, input) {\n  for (var i = 0; i < input.length; i++) {\n    if (ctx.c === 128) { // buffer full ?\n      ctx.t += ctx.c // add counters\n      blake2bCompress(ctx, false) // compress (not last)\n      ctx.c = 0 // counter to zero\n    }\n    ctx.b[ctx.c++] = input[i]\n  }\n}\n\n// Completes a BLAKE2b streaming hash\n// Returns a Uint8Array containing the message digest\nfunction blake2bFinal (ctx) {\n  ctx.t += ctx.c // mark last block offset\n\n  while (ctx.c < 128) { // fill up with zeros\n    ctx.b[ctx.c++] = 0\n  }\n  blake2bCompress(ctx, true) // final block flag = 1\n\n  // little endian convert and store\n  var out = new Uint8Array(ctx.outlen)\n  for (var i = 0; i < ctx.outlen; i++) {\n    out[i] = ctx.h[i >> 2] >> (8 * (i & 3))\n  }\n  return out\n}\n\n// Computes the BLAKE2B hash of a string or byte array, and returns a Uint8Array\n//\n// Returns a n-byte Uint8Array\n//\n// Parameters:\n// - input - the input bytes, as a string, Buffer or Uint8Array\n// - key - optional key Uint8Array, up to 64 bytes\n// - outlen - optional output length in bytes, default 64\nfunction blake2b (input, key, outlen) {\n  // preprocess inputs\n  outlen = outlen || 64\n  input = util.normalizeInput(input)\n\n  // do the math\n  var ctx = blake2bInit(outlen, key)\n  blake2bUpdate(ctx, input)\n  return blake2bFinal(ctx)\n}\n\n// Computes the BLAKE2B hash of a string or byte array\n//\n// Returns an n-byte hash in hex, all lowercase\n//\n// Parameters:\n// - input - the input bytes, as a string, Buffer, or Uint8Array\n// - key - optional key Uint8Array, up to 64 bytes\n// - outlen - optional output length in bytes, default 64\nfunction blake2bHex (input, key, outlen) {\n  var output = blake2b(input, key, outlen)\n  return util.toHex(output)\n}\n\nmodule.exports = {\n  blake2b: blake2b,\n  blake2bHex: blake2bHex,\n  blake2bInit: blake2bInit,\n  blake2bUpdate: blake2bUpdate,\n  blake2bFinal: blake2bFinal\n}\n","// BLAKE2s hash function in pure Javascript\n// Adapted from the reference implementation in RFC7693\n// Ported to Javascript by DC - https://github.com/dcposch\n\nvar util = require('./util')\n\n// Little-endian byte access.\n// Expects a Uint8Array and an index\n// Returns the little-endian uint32 at v[i..i+3]\nfunction B2S_GET32 (v, i) {\n  return v[i] ^ (v[i + 1] << 8) ^ (v[i + 2] << 16) ^ (v[i + 3] << 24)\n}\n\n// Mixing function G.\nfunction B2S_G (a, b, c, d, x, y) {\n  v[a] = v[a] + v[b] + x\n  v[d] = ROTR32(v[d] ^ v[a], 16)\n  v[c] = v[c] + v[d]\n  v[b] = ROTR32(v[b] ^ v[c], 12)\n  v[a] = v[a] + v[b] + y\n  v[d] = ROTR32(v[d] ^ v[a], 8)\n  v[c] = v[c] + v[d]\n  v[b] = ROTR32(v[b] ^ v[c], 7)\n}\n\n// 32-bit right rotation\n// x should be a uint32\n// y must be between 1 and 31, inclusive\nfunction ROTR32 (x, y) {\n  return (x >>> y) ^ (x << (32 - y))\n}\n\n// Initialization Vector.\nvar BLAKE2S_IV = new Uint32Array([\n  0x6A09E667, 0xBB67AE85, 0x3C6EF372, 0xA54FF53A,\n  0x510E527F, 0x9B05688C, 0x1F83D9AB, 0x5BE0CD19])\n\nvar SIGMA = new Uint8Array([\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3,\n  11, 8, 12, 0, 5, 2, 15, 13, 10, 14, 3, 6, 7, 1, 9, 4,\n  7, 9, 3, 1, 13, 12, 11, 14, 2, 6, 5, 10, 4, 0, 15, 8,\n  9, 0, 5, 7, 2, 4, 10, 15, 14, 1, 11, 12, 6, 8, 3, 13,\n  2, 12, 6, 10, 0, 11, 8, 3, 4, 13, 7, 5, 15, 14, 1, 9,\n  12, 5, 1, 15, 14, 13, 4, 10, 0, 7, 6, 3, 9, 2, 8, 11,\n  13, 11, 7, 14, 12, 1, 3, 9, 5, 0, 15, 4, 8, 6, 2, 10,\n  6, 15, 14, 9, 11, 3, 0, 8, 12, 2, 13, 7, 1, 4, 10, 5,\n  10, 2, 8, 4, 7, 6, 1, 5, 15, 11, 9, 14, 3, 12, 13, 0])\n\n// Compression function. \"last\" flag indicates last block\nvar v = new Uint32Array(16)\nvar m = new Uint32Array(16)\nfunction blake2sCompress (ctx, last) {\n  var i = 0\n  for (i = 0; i < 8; i++) { // init work variables\n    v[i] = ctx.h[i]\n    v[i + 8] = BLAKE2S_IV[i]\n  }\n\n  v[12] ^= ctx.t // low 32 bits of offset\n  v[13] ^= (ctx.t / 0x100000000) // high 32 bits\n  if (last) { // last block flag set ?\n    v[14] = ~v[14]\n  }\n\n  for (i = 0; i < 16; i++) { // get little-endian words\n    m[i] = B2S_GET32(ctx.b, 4 * i)\n  }\n\n  // ten rounds of mixing\n  // uncomment the DebugPrint calls to log the computation\n  // and match the RFC sample documentation\n  // util.debugPrint('          m[16]', m, 32)\n  for (i = 0; i < 10; i++) {\n    // util.debugPrint('   (i=' + i + ')  v[16]', v, 32)\n    B2S_G(0, 4, 8, 12, m[SIGMA[i * 16 + 0]], m[SIGMA[i * 16 + 1]])\n    B2S_G(1, 5, 9, 13, m[SIGMA[i * 16 + 2]], m[SIGMA[i * 16 + 3]])\n    B2S_G(2, 6, 10, 14, m[SIGMA[i * 16 + 4]], m[SIGMA[i * 16 + 5]])\n    B2S_G(3, 7, 11, 15, m[SIGMA[i * 16 + 6]], m[SIGMA[i * 16 + 7]])\n    B2S_G(0, 5, 10, 15, m[SIGMA[i * 16 + 8]], m[SIGMA[i * 16 + 9]])\n    B2S_G(1, 6, 11, 12, m[SIGMA[i * 16 + 10]], m[SIGMA[i * 16 + 11]])\n    B2S_G(2, 7, 8, 13, m[SIGMA[i * 16 + 12]], m[SIGMA[i * 16 + 13]])\n    B2S_G(3, 4, 9, 14, m[SIGMA[i * 16 + 14]], m[SIGMA[i * 16 + 15]])\n  }\n  // util.debugPrint('   (i=10) v[16]', v, 32)\n\n  for (i = 0; i < 8; i++) {\n    ctx.h[i] ^= v[i] ^ v[i + 8]\n  }\n  // util.debugPrint('h[8]', ctx.h, 32)\n}\n\n// Creates a BLAKE2s hashing context\n// Requires an output length between 1 and 32 bytes\n// Takes an optional Uint8Array key\nfunction blake2sInit (outlen, key) {\n  if (!(outlen > 0 && outlen <= 32)) {\n    throw new Error('Incorrect output length, should be in [1, 32]')\n  }\n  var keylen = key ? key.length : 0\n  if (key && !(keylen > 0 && keylen <= 32)) {\n    throw new Error('Incorrect key length, should be in [1, 32]')\n  }\n\n  var ctx = {\n    h: new Uint32Array(BLAKE2S_IV), // hash state\n    b: new Uint32Array(64), // input block\n    c: 0, // pointer within block\n    t: 0, // input count\n    outlen: outlen // output length in bytes\n  }\n  ctx.h[0] ^= 0x01010000 ^ (keylen << 8) ^ outlen\n\n  if (keylen > 0) {\n    blake2sUpdate(ctx, key)\n    ctx.c = 64 // at the end\n  }\n\n  return ctx\n}\n\n// Updates a BLAKE2s streaming hash\n// Requires hash context and Uint8Array (byte array)\nfunction blake2sUpdate (ctx, input) {\n  for (var i = 0; i < input.length; i++) {\n    if (ctx.c === 64) { // buffer full ?\n      ctx.t += ctx.c // add counters\n      blake2sCompress(ctx, false) // compress (not last)\n      ctx.c = 0 // counter to zero\n    }\n    ctx.b[ctx.c++] = input[i]\n  }\n}\n\n// Completes a BLAKE2s streaming hash\n// Returns a Uint8Array containing the message digest\nfunction blake2sFinal (ctx) {\n  ctx.t += ctx.c // mark last block offset\n  while (ctx.c < 64) { // fill up with zeros\n    ctx.b[ctx.c++] = 0\n  }\n  blake2sCompress(ctx, true) // final block flag = 1\n\n  // little endian convert and store\n  var out = new Uint8Array(ctx.outlen)\n  for (var i = 0; i < ctx.outlen; i++) {\n    out[i] = (ctx.h[i >> 2] >> (8 * (i & 3))) & 0xFF\n  }\n  return out\n}\n\n// Computes the BLAKE2S hash of a string or byte array, and returns a Uint8Array\n//\n// Returns a n-byte Uint8Array\n//\n// Parameters:\n// - input - the input bytes, as a string, Buffer, or Uint8Array\n// - key - optional key Uint8Array, up to 32 bytes\n// - outlen - optional output length in bytes, default 64\nfunction blake2s (input, key, outlen) {\n  // preprocess inputs\n  outlen = outlen || 32\n  input = util.normalizeInput(input)\n\n  // do the math\n  var ctx = blake2sInit(outlen, key)\n  blake2sUpdate(ctx, input)\n  return blake2sFinal(ctx)\n}\n\n// Computes the BLAKE2S hash of a string or byte array\n//\n// Returns an n-byte hash in hex, all lowercase\n//\n// Parameters:\n// - input - the input bytes, as a string, Buffer, or Uint8Array\n// - key - optional key Uint8Array, up to 32 bytes\n// - outlen - optional output length in bytes, default 64\nfunction blake2sHex (input, key, outlen) {\n  var output = blake2s(input, key, outlen)\n  return util.toHex(output)\n}\n\nmodule.exports = {\n  blake2s: blake2s,\n  blake2sHex: blake2sHex,\n  blake2sInit: blake2sInit,\n  blake2sUpdate: blake2sUpdate,\n  blake2sFinal: blake2sFinal\n}\n","var b2b = require('./blake2b')\nvar b2s = require('./blake2s')\n\nmodule.exports = {\n  blake2b: b2b.blake2b,\n  blake2bHex: b2b.blake2bHex,\n  blake2bInit: b2b.blake2bInit,\n  blake2bUpdate: b2b.blake2bUpdate,\n  blake2bFinal: b2b.blake2bFinal,\n  blake2s: b2s.blake2s,\n  blake2sHex: b2s.blake2sHex,\n  blake2sInit: b2s.blake2sInit,\n  blake2sUpdate: b2s.blake2sUpdate,\n  blake2sFinal: b2s.blake2sFinal\n}\n","var ERROR_MSG_INPUT = 'Input must be an string, Buffer or Uint8Array'\n\n// For convenience, let people hash a string, not just a Uint8Array\nfunction normalizeInput (input) {\n  var ret\n  if (input instanceof Uint8Array) {\n    ret = input\n  } else if (input instanceof Buffer) {\n    ret = new Uint8Array(input)\n  } else if (typeof (input) === 'string') {\n    ret = new Uint8Array(Buffer.from(input, 'utf8'))\n  } else {\n    throw new Error(ERROR_MSG_INPUT)\n  }\n  return ret\n}\n\n// Converts a Uint8Array to a hexadecimal string\n// For example, toHex([255, 0, 255]) returns \"ff00ff\"\nfunction toHex (bytes) {\n  return Array.prototype.map.call(bytes, function (n) {\n    return (n < 16 ? '0' : '') + n.toString(16)\n  }).join('')\n}\n\n// Converts any value in [0...2^32-1] to an 8-character hex string\nfunction uint32ToHex (val) {\n  return (0x100000000 + val).toString(16).substring(1)\n}\n\n// For debugging: prints out hash state in the same format as the RFC\n// sample computation exactly, so that you can diff\nfunction debugPrint (label, arr, size) {\n  var msg = '\\n' + label + ' = '\n  for (var i = 0; i < arr.length; i += 2) {\n    if (size === 32) {\n      msg += uint32ToHex(arr[i]).toUpperCase()\n      msg += ' '\n      msg += uint32ToHex(arr[i + 1]).toUpperCase()\n    } else if (size === 64) {\n      msg += uint32ToHex(arr[i + 1]).toUpperCase()\n      msg += uint32ToHex(arr[i]).toUpperCase()\n    } else throw new Error('Invalid size ' + size)\n    if (i % 6 === 4) {\n      msg += '\\n' + new Array(label.length + 4).join(' ')\n    } else if (i < arr.length - 2) {\n      msg += ' '\n    }\n  }\n  console.log(msg)\n}\n\n// For performance testing: generates N bytes of input, hashes M times\n// Measures and prints MB/second hash performance each time\nfunction testSpeed (hashFn, N, M) {\n  var startMs = new Date().getTime()\n\n  var input = new Uint8Array(N)\n  for (var i = 0; i < N; i++) {\n    input[i] = i % 256\n  }\n  var genMs = new Date().getTime()\n  console.log('Generated random input in ' + (genMs - startMs) + 'ms')\n  startMs = genMs\n\n  for (i = 0; i < M; i++) {\n    var hashHex = hashFn(input)\n    var hashMs = new Date().getTime()\n    var ms = hashMs - startMs\n    startMs = hashMs\n    console.log('Hashed in ' + ms + 'ms: ' + hashHex.substring(0, 20) + '...')\n    console.log(Math.round(N / (1 << 20) / (ms / 1000) * 100) / 100 + ' MB PER SECOND')\n  }\n}\n\nmodule.exports = {\n  normalizeInput: normalizeInput,\n  toHex: toHex,\n  debugPrint: debugPrint,\n  testSpeed: testSpeed\n}\n","/*!\n* nanocurrency-js v2.5.0: A toolkit for the Nano cryptocurrency.\n* Copyright (c) 2020 Marvin ROGER <dev at marvinroger dot fr>\n* Licensed under GPL-3.0 (https://git.io/vAZsK)\n*/\nimport A from\"fs\";import I from\"path\";import i from\"bignumber.js\";import g,{blake2b as C,blake2bInit as r,blake2bUpdate as o,blake2bFinal as n}from\"blakejs\";\n/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */function t(A,I,i,g){return new(i||(i=Promise))((function(C,r){function o(A){try{t(g.next(A))}catch(A){r(A)}}function n(A){try{t(g.throw(A))}catch(A){r(A)}}function t(A){var I;A.done?C(A.value):(I=A.value,I instanceof i?I:new i((function(A){A(I)}))).then(o,n)}t((g=g.apply(A,I||[])).next())}))}function h(A,I){var i,g,C,r,o={label:0,sent:function(){if(1&C[0])throw C[1];return C[1]},trys:[],ops:[]};return r={next:n(0),throw:n(1),return:n(2)},\"function\"==typeof Symbol&&(r[Symbol.iterator]=function(){return this}),r;function n(r){return function(n){return function(r){if(i)throw new TypeError(\"Generator is already executing.\");for(;o;)try{if(i=1,g&&(C=2&r[0]?g.return:r[0]?g.throw||((C=g.return)&&C.call(g),0):g.next)&&!(C=C.call(g,r[1])).done)return C;switch(g=0,C&&(r=[2&r[0],C.value]),r[0]){case 0:case 1:C=r;break;case 4:return o.label++,{value:r[1],done:!1};case 5:o.label++,g=r[1],r=[0];continue;case 7:r=o.ops.pop(),o.trys.pop();continue;default:if(!(C=(C=o.trys).length>0&&C[C.length-1])&&(6===r[0]||2===r[0])){o=0;continue}if(3===r[0]&&(!C||r[1]>C[0]&&r[1]<C[3])){o.label=r[1];break}if(6===r[0]&&o.label<C[1]){o.label=C[1],C=r;break}if(C&&o.label<C[2]){o.label=C[2],o.ops.push(r);break}C[2]&&o.ops.pop(),o.trys.pop();continue}r=I.call(A,o)}catch(A){r=[6,A],g=0}finally{i=C=0}if(5&r[0])throw r[1];return{value:r[0]?r[1]:void 0,done:!0}}([r,n])}}}var e,a=function(A,I){return A(I={exports:{}},I.exports),I.exports}((function(i,g){var C,r=(C=\"undefined\"!=typeof document&&document.currentScript?document.currentScript.src:void 0,function(i){var g;i=i||{},g||(g=void 0!==i?i:{});var r,o={};for(r in g)g.hasOwnProperty(r)&&(o[r]=g[r]);g.arguments=[],g.thisProgram=\"./this.program\",g.quit=function(A,I){throw I},g.preRun=[],g.postRun=[];var n=!1,t=!1,h=!1,e=!1;n=\"object\"==typeof window,t=\"function\"==typeof importScripts,h=\"object\"==typeof process&&!n&&!t,e=!n&&!h&&!t;var a,Q,B=\"\";h?(B=__dirname+\"/\",g.read=function(i,g){var C=V(i);return C||(a||(a=A),Q||(Q=I),i=Q.normalize(i),C=a.readFileSync(i)),g?C:C.toString()},g.readBinary=function(A){return(A=g.read(A,!0)).buffer||(A=new Uint8Array(A)),c(A.buffer),A},1<process.argv.length&&(g.thisProgram=process.argv[1].replace(/\\\\/g,\"/\")),g.arguments=process.argv.slice(2),process.on(\"uncaughtException\",(function(A){if(!(A instanceof z))throw A})),process.on(\"unhandledRejection\",$),g.quit=function(A){process.exit(A)},g.inspect=function(){return\"[Emscripten Module object]\"}):e?(\"undefined\"!=typeof read&&(g.read=function(A){var I=V(A);return I?j(I):read(A)}),g.readBinary=function(A){var I;return(I=V(A))?I:\"function\"==typeof readbuffer?new Uint8Array(readbuffer(A)):(c(\"object\"==typeof(I=read(A,\"binary\"))),I)},\"undefined\"!=typeof scriptArgs?g.arguments=scriptArgs:void 0!==arguments&&(g.arguments=arguments),\"function\"==typeof quit&&(g.quit=function(A){quit(A)})):(n||t)&&(t?B=self.location.href:document.currentScript&&(B=document.currentScript.src),C&&(B=C),B=0!==B.indexOf(\"blob:\")?B.substr(0,B.lastIndexOf(\"/\")+1):\"\",g.read=function(A){try{var I=new XMLHttpRequest;return I.open(\"GET\",A,!1),I.send(null),I.responseText}catch(I){if(A=V(A))return j(A);throw I}},t&&(g.readBinary=function(A){try{var I=new XMLHttpRequest;return I.open(\"GET\",A,!1),I.responseType=\"arraybuffer\",I.send(null),new Uint8Array(I.response)}catch(I){if(A=V(A))return A;throw I}}),g.readAsync=function(A,I,i){var g=new XMLHttpRequest;g.open(\"GET\",A,!0),g.responseType=\"arraybuffer\",g.onload=function(){if(200==g.status||0==g.status&&g.response)I(g.response);else{var C=V(A);C?I(C.buffer):i()}},g.onerror=i,g.send(null)},g.setWindowTitle=function(A){document.title=A});var f=g.print||(\"undefined\"!=typeof console?console.log.bind(console):\"undefined\"!=typeof print?print:null),E=g.printErr||(\"undefined\"!=typeof printErr?printErr:\"undefined\"!=typeof console&&console.warn.bind(console)||f);for(r in o)o.hasOwnProperty(r)&&(g[r]=o[r]);o=void 0;var w={\"f64-rem\":function(A,I){return A%I},debugger:function(){}};\"object\"!=typeof WebAssembly&&E(\"no native wasm support detected\");var u,s=!1;function c(A,I){A||$(\"Assertion failed: \"+I)}function l(A){var I=g[\"_\"+A];return c(I,\"Cannot call unknown function \"+A+\", make sure it is exported\"),I}function S(A,I,i,g){var C={string:function(A){var I=0;if(null!=A&&0!==A){var i=1+(A.length<<2),g=I=q(i),C=y;if(0<i){i=g+i-1;for(var r=0;r<A.length;++r){var o=A.charCodeAt(r);if(55296<=o&&57343>=o&&(o=65536+((1023&o)<<10)|1023&A.charCodeAt(++r)),127>=o){if(g>=i)break;C[g++]=o}else{if(2047>=o){if(g+1>=i)break;C[g++]=192|o>>6}else{if(65535>=o){if(g+2>=i)break;C[g++]=224|o>>12}else{if(g+3>=i)break;C[g++]=240|o>>18,C[g++]=128|o>>12&63}C[g++]=128|o>>6&63}C[g++]=128|63&o}}C[g]=0}}return I},array:function(A){var I=q(A.length);return G.set(A,I),I}},r=l(A),o=[];if(A=0,g)for(var n=0;n<g.length;n++){var t=C[i[n]];t?(0===A&&(A=W()),o[n]=t(g[n])):o[n]=g[n]}return i=function(A){if(\"string\"===I)if(A){for(var i=y,g=A+void 0,C=A;i[C]&&!(C>=g);)++C;if(16<C-A&&i.subarray&&F)A=F.decode(i.subarray(A,C));else{for(g=\"\";A<C;){var r=i[A++];if(128&r){var o=63&i[A++];if(192==(224&r))g+=String.fromCharCode((31&r)<<6|o);else{var n=63&i[A++];65536>(r=224==(240&r)?(15&r)<<12|o<<6|n:(7&r)<<18|o<<12|n<<6|63&i[A++])?g+=String.fromCharCode(r):(r-=65536,g+=String.fromCharCode(55296|r>>10,56320|1023&r))}}else g+=String.fromCharCode(r)}A=g}}else A=\"\";else A=\"boolean\"===I?!!A:A;return A}(i=r.apply(null,o)),0!==A&&T(A),i}var F=\"undefined\"!=typeof TextDecoder?new TextDecoder(\"utf8\"):void 0;\"undefined\"!=typeof TextDecoder&&new TextDecoder(\"utf-16le\");var U,G,y,D,d=g.TOTAL_MEMORY||16777216;function k(A){for(;0<A.length;){var I=A.shift();if(\"function\"==typeof I)I();else{var i=I.h;\"number\"==typeof i?void 0===I.g?g.dynCall_v(i):g.dynCall_vi(i,I.g):i(void 0===I.g?null:I.g)}}}5242880>d&&E(\"TOTAL_MEMORY should be larger than TOTAL_STACK, was \"+d+\"! (TOTAL_STACK=5242880)\"),g.buffer?U=g.buffer:(U=\"object\"==typeof WebAssembly&&\"function\"==typeof WebAssembly.Memory?(u=new WebAssembly.Memory({initial:d/65536,maximum:d/65536})).buffer:new ArrayBuffer(d),g.buffer=U),g.HEAP8=G=new Int8Array(U),g.HEAP16=new Int16Array(U),g.HEAP32=D=new Int32Array(U),g.HEAPU8=y=new Uint8Array(U),g.HEAPU16=new Uint16Array(U),g.HEAPU32=new Uint32Array(U),g.HEAPF32=new Float32Array(U),g.HEAPF64=new Float64Array(U),D[724]=5246032;var H=[],p=[],v=[],Y=[],M=!1;function K(){var A=g.preRun.shift();H.unshift(A)}var b=0,x=null;g.preloadedImages={},g.preloadedAudios={};var m=\"data:application/octet-stream;base64,\";function N(A){return String.prototype.startsWith?A.startsWith(m):0===A.indexOf(m)}var L=\"data:application/octet-stream;base64,\";if(!N(L)){var R=L;L=g.locateFile?g.locateFile(R,B):B+R}function J(){try{if(g.wasmBinary)return new Uint8Array(g.wasmBinary);var A=V(L);if(A)return A;if(g.readBinary)return g.readBinary(L);throw\"both async and sync fetching of the wasm failed\"}catch(A){$(A)}}function P(){return g.wasmBinary||!n&&!t||\"function\"!=typeof fetch?new Promise((function(A){A(J())})):fetch(L,{credentials:\"same-origin\"}).then((function(A){if(!A.ok)throw\"failed to load wasm binary file at '\"+L+\"'\";return A.arrayBuffer()})).catch((function(){return J()}))}function X(A){function I(A){g.asm=A.exports,b--,g.monitorRunDependencies&&g.monitorRunDependencies(b),0==b&&x&&(A=x,x=null,A())}function i(A){I(A.instance)}function C(A){P().then((function(A){return WebAssembly.instantiate(A,r)})).then(A,(function(A){E(\"failed to asynchronously prepare wasm: \"+A),$(A)}))}var r={env:A,global:{NaN:NaN,Infinity:1/0},\"global.Math\":Math,asm2wasm:w};if(b++,g.monitorRunDependencies&&g.monitorRunDependencies(b),g.instantiateWasm)try{return g.instantiateWasm(r,I)}catch(A){return E(\"Module.instantiateWasm callback failed with error: \"+A),!1}return g.wasmBinary||\"function\"!=typeof WebAssembly.instantiateStreaming||N(L)||\"function\"!=typeof fetch?C(i):WebAssembly.instantiateStreaming(fetch(L,{credentials:\"same-origin\"}),r).then(i,(function(A){E(\"wasm streaming compile failed: \"+A),E(\"falling back to ArrayBuffer instantiation\"),C(i)})),{}}function j(A){for(var I=[],i=0;i<A.length;i++){var g=A[i];255<g&&(g&=255),I.push(String.fromCharCode(g))}return I.join(\"\")}g.asm=function(A,I){return I.memory=u,I.table=new WebAssembly.Table({initial:2,maximum:2,element:\"anyfunc\"}),I.__memory_base=1024,I.__table_base=0,X(I)};var O=\"function\"==typeof atob?atob:function(A){var I=\"\",i=0;A=A.replace(/[^A-Za-z0-9\\+\\/=]/g,\"\");do{var g=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\".indexOf(A.charAt(i++)),C=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\".indexOf(A.charAt(i++)),r=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\".indexOf(A.charAt(i++)),o=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\".indexOf(A.charAt(i++));g=g<<2|C>>4,C=(15&C)<<4|r>>2;var n=(3&r)<<6|o;I+=String.fromCharCode(g),64!==r&&(I+=String.fromCharCode(C)),64!==o&&(I+=String.fromCharCode(n))}while(i<A.length);return I};function V(A){if(N(A)){if(A=A.slice(m.length),\"boolean\"==typeof h&&h){try{var I=Buffer.from(A,\"base64\")}catch(i){I=new Buffer(A,\"base64\")}var i=new Uint8Array(I.buffer,I.byteOffset,I.byteLength)}else try{var g=O(A),C=new Uint8Array(g.length);for(I=0;I<g.length;++I)C[I]=g.charCodeAt(I);i=C}catch(A){throw Error(\"Converting base64 string to bytes failed.\")}return i}}var Z=g.asm({},{b:$,a:function(A,I,i){y.set(y.subarray(I,I+i),A)}},U);g.asm=Z,g._emscripten_work=function(){return g.asm.c.apply(null,arguments)};var q=g.stackAlloc=function(){return g.asm.d.apply(null,arguments)},T=g.stackRestore=function(){return g.asm.e.apply(null,arguments)},W=g.stackSave=function(){return g.asm.f.apply(null,arguments)};function z(A){this.name=\"ExitStatus\",this.message=\"Program terminated with exit(\"+A+\")\",this.status=A}function _(){function A(){if(!g.calledRun&&(g.calledRun=!0,!s)){if(M||(M=!0,k(p)),k(v),g.onRuntimeInitialized&&g.onRuntimeInitialized(),g.postRun)for(\"function\"==typeof g.postRun&&(g.postRun=[g.postRun]);g.postRun.length;){var A=g.postRun.shift();Y.unshift(A)}k(Y)}}if(!(0<b)){if(g.preRun)for(\"function\"==typeof g.preRun&&(g.preRun=[g.preRun]);g.preRun.length;)K();k(H),0<b||g.calledRun||(g.setStatus?(g.setStatus(\"Running...\"),setTimeout((function(){setTimeout((function(){g.setStatus(\"\")}),1),A()}),1)):A())}}function $(A){throw g.onAbort&&g.onAbort(A),void 0!==A?(f(A),E(A),A=JSON.stringify(A)):A=\"\",s=!0,\"abort(\"+A+\"). Build with -s ASSERTIONS=1 for more info.\"}if(g.asm=Z,g.cwrap=function(A,I,i,g){var C=(i=i||[]).every((function(A){return\"number\"===A}));return\"string\"!==I&&C&&!g?l(A):function(){return S(A,I,i,arguments)}},g.then=function(A){if(g.calledRun)A(g);else{var I=g.onRuntimeInitialized;g.onRuntimeInitialized=function(){I&&I(),A(g)}}return g},z.prototype=Error(),z.prototype.constructor=z,x=function A(){g.calledRun||_(),g.calledRun||(x=A)},g.run=_,g.abort=$,g.preInit)for(\"function\"==typeof g.preInit&&(g.preInit=[g.preInit]);0<g.preInit.length;)g.preInit.pop()();return g.noExitRuntime=!0,_(),i});i.exports=r}));\n/*!\n * nanocurrency-js: A toolkit for the Nano cryptocurrency.\n * Copyright (c) 2019 Marvin ROGER <dev at marvinroger dot fr>\n * Licensed under GPL-3.0 (https://git.io/vAZsK)\n */if(\"[object process]\"===Object.prototype.toString.call(\"undefined\"!=typeof process?process:0)){var Q=require(\"util\").promisify;e=Q(require(\"crypto\").randomFill)}else e=function(A){return new Promise((function(I){crypto.getRandomValues(A),I()}))};function B(A){if(!A)return\"\";for(var I=\"\",i=0;i<A.length;i++){var g=(255&A[i]).toString(16);I+=g=1===g.length?\"0\"+g:g}return I.toUpperCase()}function f(A){if(!A)return new Uint8Array;for(var I=[],i=0;i<A.length;i+=2)I.push(parseInt(A.substr(i,2),16));return new Uint8Array(I)}var E=\"13456789abcdefghijkmnopqrstuwxyz\";function w(A){for(var I=A.length,i=8*I%5,g=0===i?0:5-i,C=0,r=\"\",o=0,n=0;n<I;n++)for(C=C<<8|A[n],o+=8;o>=5;)r+=E[C>>>o+g-5&31],o-=5;return o>0&&(r+=E[C<<5-(o+g)&31]),r}function u(A){var I=E.indexOf(A);if(-1===I)throw new Error(\"Invalid character found: \"+A);return I}function s(A){for(var I=A.length,i=5*I%8,g=0===i?0:8-i,C=0,r=0,o=0,n=new Uint8Array(Math.ceil(5*I/8)),t=0;t<I;t++)r=r<<5|u(A[t]),(C+=5)>=8&&(n[o++]=r>>>C+g-8&255,C-=8);return C>0&&(n[o++]=r<<C+g-8&255),0!==i&&(n=n.slice(1)),n}\n/*!\n * nanocurrency-js: A toolkit for the Nano cryptocurrency.\n * Copyright (c) 2019 Marvin ROGER <dev at marvinroger dot fr>\n * Licensed under GPL-3.0 (https://git.io/vAZsK)\n */function c(A){var I,i={valid:!1,publicKeyBytes:null};if(!F(A)||!/^(xrb_|nano_)[13][13-9a-km-uw-z]{59}$/.test(A))return i;I=A.startsWith(\"xrb_\")?4:5;var g=s(A.substr(I,52));return function(A,I){for(var i=0;i<A.length;i++)if(A[i]!==I[i])return!1;return!0}(s(A.substr(I+52)),C(g,null,5).reverse())?{publicKeyBytes:g,valid:!0}:i}\n/*!\n * nanocurrency-js: A toolkit for the Nano cryptocurrency.\n * Copyright (c) 2019 Marvin ROGER <dev at marvinroger dot fr>\n * Licensed under GPL-3.0 (https://git.io/vAZsK)\n */var l=Math.pow(2,32)-1,S=new i(\"0xffffffffffffffffffffffffffffffff\");function F(A){return\"string\"==typeof A}function U(A){return\"0\"===A||!(!F(A)||!/^[1-9]{1}[0-9]{0,38}$/.test(A))&&new i(A).isLessThanOrEqualTo(S)}function G(A){return F(A)&&/^[0-9a-fA-F]{64}$/.test(A)}function y(A){return F(A)&&/^[0-9a-fA-F]{16}$/.test(A)}function D(A){return Number.isInteger(A)&&A>=0&&A<=l}function d(A){return G(A)}function k(A){return G(A)}function H(A){return c(A).valid}function p(A){return F(A)&&/^[0-9a-fA-F]{16}$/.test(A)}function v(A){return F(A)&&/^[0-9a-fA-F]{128}$/.test(A)}\n/*!\n * nanocurrency-js: A toolkit for the Nano cryptocurrency.\n * Copyright (c) 2019 Marvin ROGER <dev at marvinroger dot fr>\n * Licensed under GPL-3.0 (https://git.io/vAZsK)\n */function Y(A){var I,g=null!==(I=A.threshold)&&void 0!==I?I:\"ffffffc000000000\";if(!d(A.blockHash))throw new Error(\"Hash is not valid\");if(!p(A.work))throw new Error(\"Work is not valid\");if(!y(g))throw new Error(\"Threshold is not valid\");var C=new i(\"0x\"+g),t=f(A.blockHash),h=f(A.work).reverse(),e=r(8);o(e,h),o(e,t);var a=B(n(e).reverse());return new i(\"0x\"+a).isGreaterThanOrEqualTo(C)}var M={loaded:!1,work:null};function K(){return new Promise((function(A,I){if(M.loaded)return A(M);try{a().then((function(I){var i=Object.assign(M,{loaded:!0,work:I.cwrap(\"emscripten_work\",\"string\",[\"string\",\"string\",\"number\",\"number\"])});A(i)}))}catch(A){I(A)}}))}function b(A,I){return void 0===I&&(I={}),t(this,void 0,void 0,(function(){var i,g,C,r,o,n,t,e;return h(this,(function(h){switch(h.label){case 0:return i=I.workerIndex,g=void 0===i?0:i,C=I.workerCount,r=void 0===C?1:C,o=I.workThreshold,n=void 0===o?\"ffffffc000000000\":o,[4,K()];case 1:if(t=h.sent(),!d(A))throw new Error(\"Hash is not valid\");if(!y(n))throw new Error(\"Threshold is not valid\");if(!Number.isInteger(g)||!Number.isInteger(r)||g<0||r<1||g>r-1)throw new Error(\"Worker parameters are not valid\");return e=t.work(A,n,g,r),\"1\"===e[1]?[2,e.substr(2)]:[2,null]}}))}))}\n/*!\n * nanocurrency-js: A toolkit for the Nano cryptocurrency.\n * Copyright (c) 2019 Marvin ROGER <dev at marvinroger dot fr>\n * Licensed under GPL-3.0 (https://git.io/vAZsK)\n */var x=function(A){var I=new Float64Array(16);if(A)for(var i=0;i<A.length;i++)I[i]=A[i];return I};new Uint8Array(32)[0]=9;var m=x(),N=x([1]),L=x([30883,4953,19914,30187,55467,16705,2637,112,59544,30585,16505,36039,65139,11119,27886,20995]),R=x([61785,9906,39828,60374,45398,33411,5274,224,53552,61171,33010,6542,64743,22239,55772,9222]),J=x([54554,36645,11616,51542,42930,38181,51040,26924,56412,64982,57905,49316,21502,52590,14035,8553]),P=x([26200,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214]),X=x([41136,18958,6951,50414,58488,44335,6150,12099,55207,15867,153,11085,57099,20417,9344,11139]);function j(A,I,i,g){return function(A,I,i,g,C){for(var r=0,o=0;o<C;o++)r|=A[I+o]^i[g+o];return(1&r-1>>>8)-1}(A,I,i,g,32)}function O(A,I){var i;for(i=0;i<16;i++)A[i]=0|I[i]}function V(A){for(var I,i=1,g=0;g<16;g++)I=A[g]+i+65535,i=Math.floor(I/65536),A[g]=I-65536*i;A[0]+=i-1+37*(i-1)}function Z(A,I,i){for(var g,C=~(i-1),r=0;r<16;r++)g=C&(A[r]^I[r]),A[r]^=g,I[r]^=g}function q(A,I){for(var i,g=x(),C=x(),r=0;r<16;r++)C[r]=I[r];V(C),V(C),V(C);for(var o=0;o<2;o++){g[0]=C[0]-65517;for(r=1;r<15;r++)g[r]=C[r]-65535-(g[r-1]>>16&1),g[r-1]&=65535;g[15]=C[15]-32767-(g[14]>>16&1),i=g[15]>>16&1,g[14]&=65535,Z(C,g,1-i)}for(r=0;r<16;r++)A[2*r]=255&C[r],A[2*r+1]=C[r]>>8}function T(A,I){var i=new Uint8Array(32),g=new Uint8Array(32);return q(i,A),q(g,I),j(i,0,g,0)}function W(A){var I=new Uint8Array(32);return q(I,A),1&I[0]}function z(A,I,i){for(var g=0;g<16;g++)A[g]=I[g]+i[g]}function _(A,I,i){for(var g=0;g<16;g++)A[g]=I[g]-i[g]}function $(A,I,i){var g,C,r=0,o=0,n=0,t=0,h=0,e=0,a=0,Q=0,B=0,f=0,E=0,w=0,u=0,s=0,c=0,l=0,S=0,F=0,U=0,G=0,y=0,D=0,d=0,k=0,H=0,p=0,v=0,Y=0,M=0,K=0,b=0,x=i[0],m=i[1],N=i[2],L=i[3],R=i[4],J=i[5],P=i[6],X=i[7],j=i[8],O=i[9],V=i[10],Z=i[11],q=i[12],T=i[13],W=i[14],z=i[15];r+=(g=I[0])*x,o+=g*m,n+=g*N,t+=g*L,h+=g*R,e+=g*J,a+=g*P,Q+=g*X,B+=g*j,f+=g*O,E+=g*V,w+=g*Z,u+=g*q,s+=g*T,c+=g*W,l+=g*z,o+=(g=I[1])*x,n+=g*m,t+=g*N,h+=g*L,e+=g*R,a+=g*J,Q+=g*P,B+=g*X,f+=g*j,E+=g*O,w+=g*V,u+=g*Z,s+=g*q,c+=g*T,l+=g*W,S+=g*z,n+=(g=I[2])*x,t+=g*m,h+=g*N,e+=g*L,a+=g*R,Q+=g*J,B+=g*P,f+=g*X,E+=g*j,w+=g*O,u+=g*V,s+=g*Z,c+=g*q,l+=g*T,S+=g*W,F+=g*z,t+=(g=I[3])*x,h+=g*m,e+=g*N,a+=g*L,Q+=g*R,B+=g*J,f+=g*P,E+=g*X,w+=g*j,u+=g*O,s+=g*V,c+=g*Z,l+=g*q,S+=g*T,F+=g*W,U+=g*z,h+=(g=I[4])*x,e+=g*m,a+=g*N,Q+=g*L,B+=g*R,f+=g*J,E+=g*P,w+=g*X,u+=g*j,s+=g*O,c+=g*V,l+=g*Z,S+=g*q,F+=g*T,U+=g*W,G+=g*z,e+=(g=I[5])*x,a+=g*m,Q+=g*N,B+=g*L,f+=g*R,E+=g*J,w+=g*P,u+=g*X,s+=g*j,c+=g*O,l+=g*V,S+=g*Z,F+=g*q,U+=g*T,G+=g*W,y+=g*z,a+=(g=I[6])*x,Q+=g*m,B+=g*N,f+=g*L,E+=g*R,w+=g*J,u+=g*P,s+=g*X,c+=g*j,l+=g*O,S+=g*V,F+=g*Z,U+=g*q,G+=g*T,y+=g*W,D+=g*z,Q+=(g=I[7])*x,B+=g*m,f+=g*N,E+=g*L,w+=g*R,u+=g*J,s+=g*P,c+=g*X,l+=g*j,S+=g*O,F+=g*V,U+=g*Z,G+=g*q,y+=g*T,D+=g*W,d+=g*z,B+=(g=I[8])*x,f+=g*m,E+=g*N,w+=g*L,u+=g*R,s+=g*J,c+=g*P,l+=g*X,S+=g*j,F+=g*O,U+=g*V,G+=g*Z,y+=g*q,D+=g*T,d+=g*W,k+=g*z,f+=(g=I[9])*x,E+=g*m,w+=g*N,u+=g*L,s+=g*R,c+=g*J,l+=g*P,S+=g*X,F+=g*j,U+=g*O,G+=g*V,y+=g*Z,D+=g*q,d+=g*T,k+=g*W,H+=g*z,E+=(g=I[10])*x,w+=g*m,u+=g*N,s+=g*L,c+=g*R,l+=g*J,S+=g*P,F+=g*X,U+=g*j,G+=g*O,y+=g*V,D+=g*Z,d+=g*q,k+=g*T,H+=g*W,p+=g*z,w+=(g=I[11])*x,u+=g*m,s+=g*N,c+=g*L,l+=g*R,S+=g*J,F+=g*P,U+=g*X,G+=g*j,y+=g*O,D+=g*V,d+=g*Z,k+=g*q,H+=g*T,p+=g*W,v+=g*z,u+=(g=I[12])*x,s+=g*m,c+=g*N,l+=g*L,S+=g*R,F+=g*J,U+=g*P,G+=g*X,y+=g*j,D+=g*O,d+=g*V,k+=g*Z,H+=g*q,p+=g*T,v+=g*W,Y+=g*z,s+=(g=I[13])*x,c+=g*m,l+=g*N,S+=g*L,F+=g*R,U+=g*J,G+=g*P,y+=g*X,D+=g*j,d+=g*O,k+=g*V,H+=g*Z,p+=g*q,v+=g*T,Y+=g*W,M+=g*z,c+=(g=I[14])*x,l+=g*m,S+=g*N,F+=g*L,U+=g*R,G+=g*J,y+=g*P,D+=g*X,d+=g*j,k+=g*O,H+=g*V,p+=g*Z,v+=g*q,Y+=g*T,M+=g*W,K+=g*z,l+=(g=I[15])*x,o+=38*(F+=g*N),n+=38*(U+=g*L),t+=38*(G+=g*R),h+=38*(y+=g*J),e+=38*(D+=g*P),a+=38*(d+=g*X),Q+=38*(k+=g*j),B+=38*(H+=g*O),f+=38*(p+=g*V),E+=38*(v+=g*Z),w+=38*(Y+=g*q),u+=38*(M+=g*T),s+=38*(K+=g*W),c+=38*(b+=g*z),r=(g=(r+=38*(S+=g*m))+(C=1)+65535)-65536*(C=Math.floor(g/65536)),o=(g=o+C+65535)-65536*(C=Math.floor(g/65536)),n=(g=n+C+65535)-65536*(C=Math.floor(g/65536)),t=(g=t+C+65535)-65536*(C=Math.floor(g/65536)),h=(g=h+C+65535)-65536*(C=Math.floor(g/65536)),e=(g=e+C+65535)-65536*(C=Math.floor(g/65536)),a=(g=a+C+65535)-65536*(C=Math.floor(g/65536)),Q=(g=Q+C+65535)-65536*(C=Math.floor(g/65536)),B=(g=B+C+65535)-65536*(C=Math.floor(g/65536)),f=(g=f+C+65535)-65536*(C=Math.floor(g/65536)),E=(g=E+C+65535)-65536*(C=Math.floor(g/65536)),w=(g=w+C+65535)-65536*(C=Math.floor(g/65536)),u=(g=u+C+65535)-65536*(C=Math.floor(g/65536)),s=(g=s+C+65535)-65536*(C=Math.floor(g/65536)),c=(g=c+C+65535)-65536*(C=Math.floor(g/65536)),l=(g=l+C+65535)-65536*(C=Math.floor(g/65536)),r=(g=(r+=C-1+37*(C-1))+(C=1)+65535)-65536*(C=Math.floor(g/65536)),o=(g=o+C+65535)-65536*(C=Math.floor(g/65536)),n=(g=n+C+65535)-65536*(C=Math.floor(g/65536)),t=(g=t+C+65535)-65536*(C=Math.floor(g/65536)),h=(g=h+C+65535)-65536*(C=Math.floor(g/65536)),e=(g=e+C+65535)-65536*(C=Math.floor(g/65536)),a=(g=a+C+65535)-65536*(C=Math.floor(g/65536)),Q=(g=Q+C+65535)-65536*(C=Math.floor(g/65536)),B=(g=B+C+65535)-65536*(C=Math.floor(g/65536)),f=(g=f+C+65535)-65536*(C=Math.floor(g/65536)),E=(g=E+C+65535)-65536*(C=Math.floor(g/65536)),w=(g=w+C+65535)-65536*(C=Math.floor(g/65536)),u=(g=u+C+65535)-65536*(C=Math.floor(g/65536)),s=(g=s+C+65535)-65536*(C=Math.floor(g/65536)),c=(g=c+C+65535)-65536*(C=Math.floor(g/65536)),l=(g=l+C+65535)-65536*(C=Math.floor(g/65536)),r+=C-1+37*(C-1),A[0]=r,A[1]=o,A[2]=n,A[3]=t,A[4]=h,A[5]=e,A[6]=a,A[7]=Q,A[8]=B,A[9]=f,A[10]=E,A[11]=w,A[12]=u,A[13]=s,A[14]=c,A[15]=l}function AA(A,I){$(A,I,I)}function IA(A,I,i){for(var C=new Uint8Array(i),r=0;r<i;++r)C[r]=I[r];var o=g.blake2b(C);for(r=0;r<64;++r)A[r]=o[r];return 0}function iA(A,I){var i=x(),g=x(),C=x(),r=x(),o=x(),n=x(),t=x(),h=x(),e=x();_(i,A[1],A[0]),_(e,I[1],I[0]),$(i,i,e),z(g,A[0],A[1]),z(e,I[0],I[1]),$(g,g,e),$(C,A[3],I[3]),$(C,C,R),$(r,A[2],I[2]),z(r,r,r),_(o,g,i),_(n,r,C),z(t,r,C),z(h,g,i),$(A[0],o,n),$(A[1],h,t),$(A[2],t,n),$(A[3],o,h)}function gA(A,I,i){var g;for(g=0;g<4;g++)Z(A[g],I[g],i)}function CA(A,I){var i=x(),g=x(),C=x();!function(A,I){var i,g=x();for(i=0;i<16;i++)g[i]=I[i];for(i=253;i>=0;i--)AA(g,g),2!==i&&4!==i&&$(g,g,I);for(i=0;i<16;i++)A[i]=g[i]}(C,I[2]),$(i,I[0],C),$(g,I[1],C),q(A,g),A[31]^=W(i)<<7}function rA(A,I,i){var g,C;for(O(A[0],m),O(A[1],N),O(A[2],N),O(A[3],m),C=255;C>=0;--C)gA(A,I,g=i[C/8|0]>>(7&C)&1),iA(I,A),iA(A,A),gA(A,I,g)}function oA(A,I){var i=[x(),x(),x(),x()];O(i[0],J),O(i[1],P),O(i[2],N),$(i[3],J,P),rA(A,i,I)}var nA,tA=new Float64Array([237,211,245,92,26,99,18,88,214,156,247,162,222,249,222,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16]);function hA(A,I){var i,g,C,r;for(g=63;g>=32;--g){for(i=0,C=g-32,r=g-12;C<r;++C)I[C]+=i-16*I[g]*tA[C-(g-32)],i=I[C]+128>>8,I[C]-=256*i;I[C]+=i,I[g]=0}for(i=0,C=0;C<32;C++)I[C]+=i-(I[31]>>4)*tA[C],i=I[C]>>8,I[C]&=255;for(C=0;C<32;C++)I[C]-=i*tA[C];for(g=0;g<32;g++)I[g+1]+=I[g]>>8,A[g]=255&I[g]}function eA(A){for(var I=new Float64Array(64),i=0;i<64;i++)I[i]=A[i];for(i=0;i<64;i++)A[i]=0;hA(A,I)}function aA(A){var I=new Uint8Array(64),i=[x(),x(),x(),x()],C=new Uint8Array(32),r=g.blake2bInit(64);return g.blake2bUpdate(r,A),(I=g.blake2bFinal(r))[0]&=248,I[31]&=127,I[31]|=64,oA(i,I),CA(C,i),C}function QA(A,I){var i=x(),g=x(),C=x(),r=x(),o=x(),n=x(),t=x();return O(A[2],N),function(A,I){var i;for(i=0;i<16;i++)A[i]=I[2*i]+(I[2*i+1]<<8);A[15]&=32767}(A[1],I),AA(C,A[1]),$(r,C,L),_(C,C,A[2]),z(r,A[2],r),AA(o,r),AA(n,o),$(t,n,o),$(i,t,C),$(i,i,r),function(A,I){var i,g=x();for(i=0;i<16;i++)g[i]=I[i];for(i=250;i>=0;i--)AA(g,g),1!==i&&$(g,g,I);for(i=0;i<16;i++)A[i]=g[i]}(i,i),$(i,i,C),$(i,i,r),$(i,i,r),$(A[0],i,r),AA(g,A[0]),$(g,g,r),T(g,C)&&$(A[0],A[0],X),AA(g,A[0]),$(g,g,r),T(g,C)?-1:(W(A[0])===I[31]>>7&&_(A[0],m,A[0]),$(A[3],A[0],A[1]),0)}function BA(A,I){if(32!==I.length)throw new Error(\"bad secret key size\");var i=new Uint8Array(64+A.length);return function(A,I,i,g){var C,r,o=new Uint8Array(64),n=new Uint8Array(64),t=new Uint8Array(64),h=new Float64Array(64),e=[x(),x(),x(),x()],a=aA(g);IA(o,g,32),o[0]&=248,o[31]&=127,o[31]|=64;var Q=i+64;for(C=0;C<i;C++)A[64+C]=I[C];for(C=0;C<32;C++)A[32+C]=o[32+C];for(IA(t,A.subarray(32),i+32),eA(t),oA(e,t),CA(A,e),C=32;C<64;C++)A[C]=a[C-32];for(IA(n,A,i+64),eA(n),C=0;C<64;C++)h[C]=0;for(C=0;C<32;C++)h[C]=t[C];for(C=0;C<32;C++)for(r=0;r<32;r++)h[C+r]+=n[C]*o[r];hA(A.subarray(32),h)}(i,A,A.length,I),i}function fA(A,I,i){if(64!==I.length)throw new Error(\"bad signature size\");if(32!==i.length)throw new Error(\"bad public key size\");var g,C=new Uint8Array(64+A.length),r=new Uint8Array(64+A.length);for(g=0;g<64;g++)C[g]=I[g];for(g=0;g<A.length;g++)C[g+64]=A[g];return function(A,I,i,g){var C,r=new Uint8Array(32),o=new Uint8Array(64),n=[x(),x(),x(),x()],t=[x(),x(),x(),x()];if(-1,i<64)return-1;if(QA(t,g))return-1;for(C=0;C<i;C++)A[C]=I[C];for(C=0;C<32;C++)A[C+32]=g[C];if(IA(o,A,i),eA(o),rA(n,t,o),oA(t,I.subarray(32)),iA(n,t),CA(r,n),i-=64,j(I,0,r,0)){for(C=0;C<i;C++)A[C]=0;return-1}for(C=0;C<i;C++)A[C]=I[C+64];return i}(r,C,C.length,i)>=0}\n/*!\n * nanocurrency-js: A toolkit for the Nano cryptocurrency.\n * Copyright (c) 2019 Marvin ROGER <dev at marvinroger dot fr>\n * Licensed under GPL-3.0 (https://git.io/vAZsK)\n */function EA(){return new Promise((function(A,I){var i;(i=32,new Promise((function(A,I){var g=new Uint8Array(i);e(g).then((function(){return A(g)})).catch(I)}))).then((function(I){var i=I.reduce((function(A,I){return\"\"+A+(\"0\"+I.toString(16)).slice(-2)}),\"\");return A(i)})).catch(I)}))}function wA(A,I){if(!G(A))throw new Error(\"Seed is not valid\");if(!D(I))throw new Error(\"Index is not valid\");var i=f(A),g=new ArrayBuffer(4);new DataView(g).setUint32(0,I);var C=new Uint8Array(g),t=r(32);return o(t,i),o(t,C),B(n(t))}function uA(A){var I,i=k(A),g=c(A),C=g.valid;if(!i&&!C)throw new Error(\"Secret key or address is not valid\");i?I=aA(f(A)):I=g.publicKeyBytes;return B(I)}function sA(A,I){if(void 0===I&&(I={}),!k(A))throw new Error(\"Public key is not valid\");var i=f(A),g=f(A),r=\"xrb_\";return!0===I.useNanoPrefix&&(r=\"nano_\"),r+w(g)+w(C(i,null,5).reverse())}\n/*!\n * nanocurrency-js: A toolkit for the Nano cryptocurrency.\n * Copyright (c) 2019 Marvin ROGER <dev at marvinroger dot fr>\n * Licensed under GPL-3.0 (https://git.io/vAZsK)\n */!function(A){A.hex=\"hex\",A.raw=\"raw\",A.nano=\"nano\",A.knano=\"knano\",A.Nano=\"Nano\",A.NANO=\"NANO\",A.KNano=\"KNano\",A.MNano=\"MNano\"}(nA||(nA={}));var cA={hex:0,raw:0,nano:24,knano:27,Nano:30,NANO:30,KNano:33,MNano:36},lA=i.clone({EXPONENTIAL_AT:1e9,DECIMAL_PLACES:cA.MNano});function SA(A,I){var i=new Error(\"From or to is not valid\");if(!I)throw i;var g=cA[I.from],C=cA[I.to];if(void 0===g||void 0===C)throw new Error(\"From or to is not valid\");var r=new Error(\"Value is not valid\");if(\"hex\"===I.from){if(!/^[0-9a-fA-F]{32}$/.test(A))throw r}else if(!function(A){if(!F(A))return!1;if(A.startsWith(\".\")||A.endsWith(\".\"))return!1;var I=A.replace(\".\",\"\");if(A.length-I.length>1)return!1;for(var i=0,g=I;i<g.length;i++){var C=g[i];if(C<\"0\"||C>\"9\")return!1}return!0}(A))throw r;var o,n=g-C;if(o=\"hex\"===I.from?new lA(\"0x\"+A):new lA(A),n<0)for(var t=0;t<-n;t++)o=o.dividedBy(10);else if(n>0)for(t=0;t<n;t++)o=o.multipliedBy(10);return\"hex\"===I.to?o.toString(16).padStart(32,\"0\"):o.toString()}\n/*!\n * nanocurrency-js: A toolkit for the Nano cryptocurrency.\n * Copyright (c) 2019 Marvin ROGER <dev at marvinroger dot fr>\n * Licensed under GPL-3.0 (https://git.io/vAZsK)\n */var FA=new Uint8Array(32);function UA(A){var I,i=f(uA(A.account)),g=f(A.previous),C=f(uA(A.representative)),t=f(SA(A.balance,{from:nA.raw,to:nA.hex}));I=H(A.link)?f(uA(A.link)):f(A.link);var h=r(32);return o(h,FA),o(h,i),o(h,g),o(h,C),o(h,t),o(h,I),B(n(h))}function GA(A){if(!H(A.account))throw new Error(\"Account is not valid\");if(!d(A.previous))throw new Error(\"Previous is not valid\");if(!H(A.representative))throw new Error(\"Representative is not valid\");if(!U(A.balance))throw new Error(\"Balance is not valid\");if(!H(A.link)&&!d(A.link))throw new Error(\"Link is not valid\");return UA(A)}\n/*!\n * nanocurrency-js: A toolkit for the Nano cryptocurrency.\n * Copyright (c) 2019 Marvin ROGER <dev at marvinroger dot fr>\n * Licensed under GPL-3.0 (https://git.io/vAZsK)\n */function yA(A){if(!d(A.hash))throw new Error(\"Hash is not valid\");if(!k(A.secretKey))throw new Error(\"Secret key is not valid\");return B(function(A,I){for(var i=BA(A,I),g=new Uint8Array(64),C=0;C<g.length;C++)g[C]=i[C];return g}(f(A.hash),f(A.secretKey)))}function DA(A){if(!d(A.hash))throw new Error(\"Hash is not valid\");if(!v(A.signature))throw new Error(\"Signature is not valid\");if(!k(A.publicKey))throw new Error(\"Public key is not valid\");return fA(f(A.hash),f(A.signature),f(A.publicKey))}\n/*!\n * nanocurrency-js: A toolkit for the Nano cryptocurrency.\n * Copyright (c) 2019 Marvin ROGER <dev at marvinroger dot fr>\n * Licensed under GPL-3.0 (https://git.io/vAZsK)\n */FA[31]=6;var dA=\"0000000000000000000000000000000000000000000000000000000000000000\";function kA(A,I){if(!k(A))throw new Error(\"Secret key is not valid\");if(void 0===I.work)throw new Error(\"Work is not set\");if(!H(I.representative))throw new Error(\"Representative is not valid\");if(!U(I.balance))throw new Error(\"Balance is not valid\");var i;if(null===I.previous)i=dA;else if(!d(i=I.previous))throw new Error(\"Previous is not valid\");var g,C=!1;if(null===I.link)g=dA;else if(H(g=I.link))C=!0;else if(!d(g))throw new Error(\"Link is not valid\");if(i===dA&&(C||g===dA))throw new Error(\"Block is impossible\");var r,o,n=sA(uA(A)),t=UA({account:n,previous:i,representative:I.representative,balance:I.balance,link:g}),h=yA({hash:t,secretKey:A});return C?r=uA(o=g):o=sA(r=g),{hash:t,block:{type:\"state\",account:n,previous:i,representative:I.representative,balance:I.balance,link:r,link_as_account:o,work:I.work,signature:h}}}export{nA as Unit,H as checkAddress,U as checkAmount,d as checkHash,D as checkIndex,k as checkKey,G as checkSeed,v as checkSignature,y as checkThreshold,p as checkWork,b as computeWork,SA as convert,kA as createBlock,sA as deriveAddress,uA as derivePublicKey,wA as deriveSecretKey,EA as generateSeed,GA as hashBlock,yA as signBlock,Y as validateWork,DA as verifyBlock};\n",";(function (globalObject) {\r\n  'use strict';\r\n\r\n/*\r\n *      bignumber.js v9.0.0\r\n *      A JavaScript library for arbitrary-precision arithmetic.\r\n *      https://github.com/MikeMcl/bignumber.js\r\n *      Copyright (c) 2019 Michael Mclaughlin <M8ch88l@gmail.com>\r\n *      MIT Licensed.\r\n *\r\n *      BigNumber.prototype methods     |  BigNumber methods\r\n *                                      |\r\n *      absoluteValue            abs    |  clone\r\n *      comparedTo                      |  config               set\r\n *      decimalPlaces            dp     |      DECIMAL_PLACES\r\n *      dividedBy                div    |      ROUNDING_MODE\r\n *      dividedToIntegerBy       idiv   |      EXPONENTIAL_AT\r\n *      exponentiatedBy          pow    |      RANGE\r\n *      integerValue                    |      CRYPTO\r\n *      isEqualTo                eq     |      MODULO_MODE\r\n *      isFinite                        |      POW_PRECISION\r\n *      isGreaterThan            gt     |      FORMAT\r\n *      isGreaterThanOrEqualTo   gte    |      ALPHABET\r\n *      isInteger                       |  isBigNumber\r\n *      isLessThan               lt     |  maximum              max\r\n *      isLessThanOrEqualTo      lte    |  minimum              min\r\n *      isNaN                           |  random\r\n *      isNegative                      |  sum\r\n *      isPositive                      |\r\n *      isZero                          |\r\n *      minus                           |\r\n *      modulo                   mod    |\r\n *      multipliedBy             times  |\r\n *      negated                         |\r\n *      plus                            |\r\n *      precision                sd     |\r\n *      shiftedBy                       |\r\n *      squareRoot               sqrt   |\r\n *      toExponential                   |\r\n *      toFixed                         |\r\n *      toFormat                        |\r\n *      toFraction                      |\r\n *      toJSON                          |\r\n *      toNumber                        |\r\n *      toPrecision                     |\r\n *      toString                        |\r\n *      valueOf                         |\r\n *\r\n */\r\n\r\n\r\n  var BigNumber,\r\n    isNumeric = /^-?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?$/i,\r\n    mathceil = Math.ceil,\r\n    mathfloor = Math.floor,\r\n\r\n    bignumberError = '[BigNumber Error] ',\r\n    tooManyDigits = bignumberError + 'Number primitive has more than 15 significant digits: ',\r\n\r\n    BASE = 1e14,\r\n    LOG_BASE = 14,\r\n    MAX_SAFE_INTEGER = 0x1fffffffffffff,         // 2^53 - 1\r\n    // MAX_INT32 = 0x7fffffff,                   // 2^31 - 1\r\n    POWS_TEN = [1, 10, 100, 1e3, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9, 1e10, 1e11, 1e12, 1e13],\r\n    SQRT_BASE = 1e7,\r\n\r\n    // EDITABLE\r\n    // The limit on the value of DECIMAL_PLACES, TO_EXP_NEG, TO_EXP_POS, MIN_EXP, MAX_EXP, and\r\n    // the arguments to toExponential, toFixed, toFormat, and toPrecision.\r\n    MAX = 1E9;                                   // 0 to MAX_INT32\r\n\r\n\r\n  /*\r\n   * Create and return a BigNumber constructor.\r\n   */\r\n  function clone(configObject) {\r\n    var div, convertBase, parseNumeric,\r\n      P = BigNumber.prototype = { constructor: BigNumber, toString: null, valueOf: null },\r\n      ONE = new BigNumber(1),\r\n\r\n\r\n      //----------------------------- EDITABLE CONFIG DEFAULTS -------------------------------\r\n\r\n\r\n      // The default values below must be integers within the inclusive ranges stated.\r\n      // The values can also be changed at run-time using BigNumber.set.\r\n\r\n      // The maximum number of decimal places for operations involving division.\r\n      DECIMAL_PLACES = 20,                     // 0 to MAX\r\n\r\n      // The rounding mode used when rounding to the above decimal places, and when using\r\n      // toExponential, toFixed, toFormat and toPrecision, and round (default value).\r\n      // UP         0 Away from zero.\r\n      // DOWN       1 Towards zero.\r\n      // CEIL       2 Towards +Infinity.\r\n      // FLOOR      3 Towards -Infinity.\r\n      // HALF_UP    4 Towards nearest neighbour. If equidistant, up.\r\n      // HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.\r\n      // HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.\r\n      // HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.\r\n      // HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.\r\n      ROUNDING_MODE = 4,                       // 0 to 8\r\n\r\n      // EXPONENTIAL_AT : [TO_EXP_NEG , TO_EXP_POS]\r\n\r\n      // The exponent value at and beneath which toString returns exponential notation.\r\n      // Number type: -7\r\n      TO_EXP_NEG = -7,                         // 0 to -MAX\r\n\r\n      // The exponent value at and above which toString returns exponential notation.\r\n      // Number type: 21\r\n      TO_EXP_POS = 21,                         // 0 to MAX\r\n\r\n      // RANGE : [MIN_EXP, MAX_EXP]\r\n\r\n      // The minimum exponent value, beneath which underflow to zero occurs.\r\n      // Number type: -324  (5e-324)\r\n      MIN_EXP = -1e7,                          // -1 to -MAX\r\n\r\n      // The maximum exponent value, above which overflow to Infinity occurs.\r\n      // Number type:  308  (1.7976931348623157e+308)\r\n      // For MAX_EXP > 1e7, e.g. new BigNumber('1e100000000').plus(1) may be slow.\r\n      MAX_EXP = 1e7,                           // 1 to MAX\r\n\r\n      // Whether to use cryptographically-secure random number generation, if available.\r\n      CRYPTO = false,                          // true or false\r\n\r\n      // The modulo mode used when calculating the modulus: a mod n.\r\n      // The quotient (q = a / n) is calculated according to the corresponding rounding mode.\r\n      // The remainder (r) is calculated as: r = a - n * q.\r\n      //\r\n      // UP        0 The remainder is positive if the dividend is negative, else is negative.\r\n      // DOWN      1 The remainder has the same sign as the dividend.\r\n      //             This modulo mode is commonly known as 'truncated division' and is\r\n      //             equivalent to (a % n) in JavaScript.\r\n      // FLOOR     3 The remainder has the same sign as the divisor (Python %).\r\n      // HALF_EVEN 6 This modulo mode implements the IEEE 754 remainder function.\r\n      // EUCLID    9 Euclidian division. q = sign(n) * floor(a / abs(n)).\r\n      //             The remainder is always positive.\r\n      //\r\n      // The truncated division, floored division, Euclidian division and IEEE 754 remainder\r\n      // modes are commonly used for the modulus operation.\r\n      // Although the other rounding modes can also be used, they may not give useful results.\r\n      MODULO_MODE = 1,                         // 0 to 9\r\n\r\n      // The maximum number of significant digits of the result of the exponentiatedBy operation.\r\n      // If POW_PRECISION is 0, there will be unlimited significant digits.\r\n      POW_PRECISION = 0,                    // 0 to MAX\r\n\r\n      // The format specification used by the BigNumber.prototype.toFormat method.\r\n      FORMAT = {\r\n        prefix: '',\r\n        groupSize: 3,\r\n        secondaryGroupSize: 0,\r\n        groupSeparator: ',',\r\n        decimalSeparator: '.',\r\n        fractionGroupSize: 0,\r\n        fractionGroupSeparator: '\\xA0',      // non-breaking space\r\n        suffix: ''\r\n      },\r\n\r\n      // The alphabet used for base conversion. It must be at least 2 characters long, with no '+',\r\n      // '-', '.', whitespace, or repeated character.\r\n      // '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ$_'\r\n      ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyz';\r\n\r\n\r\n    //------------------------------------------------------------------------------------------\r\n\r\n\r\n    // CONSTRUCTOR\r\n\r\n\r\n    /*\r\n     * The BigNumber constructor and exported function.\r\n     * Create and return a new instance of a BigNumber object.\r\n     *\r\n     * v {number|string|BigNumber} A numeric value.\r\n     * [b] {number} The base of v. Integer, 2 to ALPHABET.length inclusive.\r\n     */\r\n    function BigNumber(v, b) {\r\n      var alphabet, c, caseChanged, e, i, isNum, len, str,\r\n        x = this;\r\n\r\n      // Enable constructor call without `new`.\r\n      if (!(x instanceof BigNumber)) return new BigNumber(v, b);\r\n\r\n      if (b == null) {\r\n\r\n        if (v && v._isBigNumber === true) {\r\n          x.s = v.s;\r\n\r\n          if (!v.c || v.e > MAX_EXP) {\r\n            x.c = x.e = null;\r\n          } else if (v.e < MIN_EXP) {\r\n            x.c = [x.e = 0];\r\n          } else {\r\n            x.e = v.e;\r\n            x.c = v.c.slice();\r\n          }\r\n\r\n          return;\r\n        }\r\n\r\n        if ((isNum = typeof v == 'number') && v * 0 == 0) {\r\n\r\n          // Use `1 / n` to handle minus zero also.\r\n          x.s = 1 / v < 0 ? (v = -v, -1) : 1;\r\n\r\n          // Fast path for integers, where n < 2147483648 (2**31).\r\n          if (v === ~~v) {\r\n            for (e = 0, i = v; i >= 10; i /= 10, e++);\r\n\r\n            if (e > MAX_EXP) {\r\n              x.c = x.e = null;\r\n            } else {\r\n              x.e = e;\r\n              x.c = [v];\r\n            }\r\n\r\n            return;\r\n          }\r\n\r\n          str = String(v);\r\n        } else {\r\n\r\n          if (!isNumeric.test(str = String(v))) return parseNumeric(x, str, isNum);\r\n\r\n          x.s = str.charCodeAt(0) == 45 ? (str = str.slice(1), -1) : 1;\r\n        }\r\n\r\n        // Decimal point?\r\n        if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n\r\n        // Exponential form?\r\n        if ((i = str.search(/e/i)) > 0) {\r\n\r\n          // Determine exponent.\r\n          if (e < 0) e = i;\r\n          e += +str.slice(i + 1);\r\n          str = str.substring(0, i);\r\n        } else if (e < 0) {\r\n\r\n          // Integer.\r\n          e = str.length;\r\n        }\r\n\r\n      } else {\r\n\r\n        // '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\r\n        intCheck(b, 2, ALPHABET.length, 'Base');\r\n\r\n        // Allow exponential notation to be used with base 10 argument, while\r\n        // also rounding to DECIMAL_PLACES as with other bases.\r\n        if (b == 10) {\r\n          x = new BigNumber(v);\r\n          return round(x, DECIMAL_PLACES + x.e + 1, ROUNDING_MODE);\r\n        }\r\n\r\n        str = String(v);\r\n\r\n        if (isNum = typeof v == 'number') {\r\n\r\n          // Avoid potential interpretation of Infinity and NaN as base 44+ values.\r\n          if (v * 0 != 0) return parseNumeric(x, str, isNum, b);\r\n\r\n          x.s = 1 / v < 0 ? (str = str.slice(1), -1) : 1;\r\n\r\n          // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\r\n          if (BigNumber.DEBUG && str.replace(/^0\\.0*|\\./, '').length > 15) {\r\n            throw Error\r\n             (tooManyDigits + v);\r\n          }\r\n        } else {\r\n          x.s = str.charCodeAt(0) === 45 ? (str = str.slice(1), -1) : 1;\r\n        }\r\n\r\n        alphabet = ALPHABET.slice(0, b);\r\n        e = i = 0;\r\n\r\n        // Check that str is a valid base b number.\r\n        // Don't use RegExp, so alphabet can contain special characters.\r\n        for (len = str.length; i < len; i++) {\r\n          if (alphabet.indexOf(c = str.charAt(i)) < 0) {\r\n            if (c == '.') {\r\n\r\n              // If '.' is not the first character and it has not be found before.\r\n              if (i > e) {\r\n                e = len;\r\n                continue;\r\n              }\r\n            } else if (!caseChanged) {\r\n\r\n              // Allow e.g. hexadecimal 'FF' as well as 'ff'.\r\n              if (str == str.toUpperCase() && (str = str.toLowerCase()) ||\r\n                  str == str.toLowerCase() && (str = str.toUpperCase())) {\r\n                caseChanged = true;\r\n                i = -1;\r\n                e = 0;\r\n                continue;\r\n              }\r\n            }\r\n\r\n            return parseNumeric(x, String(v), isNum, b);\r\n          }\r\n        }\r\n\r\n        // Prevent later check for length on converted number.\r\n        isNum = false;\r\n        str = convertBase(str, b, 10, x.s);\r\n\r\n        // Decimal point?\r\n        if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n        else e = str.length;\r\n      }\r\n\r\n      // Determine leading zeros.\r\n      for (i = 0; str.charCodeAt(i) === 48; i++);\r\n\r\n      // Determine trailing zeros.\r\n      for (len = str.length; str.charCodeAt(--len) === 48;);\r\n\r\n      if (str = str.slice(i, ++len)) {\r\n        len -= i;\r\n\r\n        // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\r\n        if (isNum && BigNumber.DEBUG &&\r\n          len > 15 && (v > MAX_SAFE_INTEGER || v !== mathfloor(v))) {\r\n            throw Error\r\n             (tooManyDigits + (x.s * v));\r\n        }\r\n\r\n         // Overflow?\r\n        if ((e = e - i - 1) > MAX_EXP) {\r\n\r\n          // Infinity.\r\n          x.c = x.e = null;\r\n\r\n        // Underflow?\r\n        } else if (e < MIN_EXP) {\r\n\r\n          // Zero.\r\n          x.c = [x.e = 0];\r\n        } else {\r\n          x.e = e;\r\n          x.c = [];\r\n\r\n          // Transform base\r\n\r\n          // e is the base 10 exponent.\r\n          // i is where to slice str to get the first element of the coefficient array.\r\n          i = (e + 1) % LOG_BASE;\r\n          if (e < 0) i += LOG_BASE;  // i < 1\r\n\r\n          if (i < len) {\r\n            if (i) x.c.push(+str.slice(0, i));\r\n\r\n            for (len -= LOG_BASE; i < len;) {\r\n              x.c.push(+str.slice(i, i += LOG_BASE));\r\n            }\r\n\r\n            i = LOG_BASE - (str = str.slice(i)).length;\r\n          } else {\r\n            i -= len;\r\n          }\r\n\r\n          for (; i--; str += '0');\r\n          x.c.push(+str);\r\n        }\r\n      } else {\r\n\r\n        // Zero.\r\n        x.c = [x.e = 0];\r\n      }\r\n    }\r\n\r\n\r\n    // CONSTRUCTOR PROPERTIES\r\n\r\n\r\n    BigNumber.clone = clone;\r\n\r\n    BigNumber.ROUND_UP = 0;\r\n    BigNumber.ROUND_DOWN = 1;\r\n    BigNumber.ROUND_CEIL = 2;\r\n    BigNumber.ROUND_FLOOR = 3;\r\n    BigNumber.ROUND_HALF_UP = 4;\r\n    BigNumber.ROUND_HALF_DOWN = 5;\r\n    BigNumber.ROUND_HALF_EVEN = 6;\r\n    BigNumber.ROUND_HALF_CEIL = 7;\r\n    BigNumber.ROUND_HALF_FLOOR = 8;\r\n    BigNumber.EUCLID = 9;\r\n\r\n\r\n    /*\r\n     * Configure infrequently-changing library-wide settings.\r\n     *\r\n     * Accept an object with the following optional properties (if the value of a property is\r\n     * a number, it must be an integer within the inclusive range stated):\r\n     *\r\n     *   DECIMAL_PLACES   {number}           0 to MAX\r\n     *   ROUNDING_MODE    {number}           0 to 8\r\n     *   EXPONENTIAL_AT   {number|number[]}  -MAX to MAX  or  [-MAX to 0, 0 to MAX]\r\n     *   RANGE            {number|number[]}  -MAX to MAX (not zero)  or  [-MAX to -1, 1 to MAX]\r\n     *   CRYPTO           {boolean}          true or false\r\n     *   MODULO_MODE      {number}           0 to 9\r\n     *   POW_PRECISION       {number}           0 to MAX\r\n     *   ALPHABET         {string}           A string of two or more unique characters which does\r\n     *                                       not contain '.'.\r\n     *   FORMAT           {object}           An object with some of the following properties:\r\n     *     prefix                 {string}\r\n     *     groupSize              {number}\r\n     *     secondaryGroupSize     {number}\r\n     *     groupSeparator         {string}\r\n     *     decimalSeparator       {string}\r\n     *     fractionGroupSize      {number}\r\n     *     fractionGroupSeparator {string}\r\n     *     suffix                 {string}\r\n     *\r\n     * (The values assigned to the above FORMAT object properties are not checked for validity.)\r\n     *\r\n     * E.g.\r\n     * BigNumber.config({ DECIMAL_PLACES : 20, ROUNDING_MODE : 4 })\r\n     *\r\n     * Ignore properties/parameters set to null or undefined, except for ALPHABET.\r\n     *\r\n     * Return an object with the properties current values.\r\n     */\r\n    BigNumber.config = BigNumber.set = function (obj) {\r\n      var p, v;\r\n\r\n      if (obj != null) {\r\n\r\n        if (typeof obj == 'object') {\r\n\r\n          // DECIMAL_PLACES {number} Integer, 0 to MAX inclusive.\r\n          // '[BigNumber Error] DECIMAL_PLACES {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'DECIMAL_PLACES')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, MAX, p);\r\n            DECIMAL_PLACES = v;\r\n          }\r\n\r\n          // ROUNDING_MODE {number} Integer, 0 to 8 inclusive.\r\n          // '[BigNumber Error] ROUNDING_MODE {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'ROUNDING_MODE')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, 8, p);\r\n            ROUNDING_MODE = v;\r\n          }\r\n\r\n          // EXPONENTIAL_AT {number|number[]}\r\n          // Integer, -MAX to MAX inclusive or\r\n          // [integer -MAX to 0 inclusive, 0 to MAX inclusive].\r\n          // '[BigNumber Error] EXPONENTIAL_AT {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'EXPONENTIAL_AT')) {\r\n            v = obj[p];\r\n            if (v && v.pop) {\r\n              intCheck(v[0], -MAX, 0, p);\r\n              intCheck(v[1], 0, MAX, p);\r\n              TO_EXP_NEG = v[0];\r\n              TO_EXP_POS = v[1];\r\n            } else {\r\n              intCheck(v, -MAX, MAX, p);\r\n              TO_EXP_NEG = -(TO_EXP_POS = v < 0 ? -v : v);\r\n            }\r\n          }\r\n\r\n          // RANGE {number|number[]} Non-zero integer, -MAX to MAX inclusive or\r\n          // [integer -MAX to -1 inclusive, integer 1 to MAX inclusive].\r\n          // '[BigNumber Error] RANGE {not a primitive number|not an integer|out of range|cannot be zero}: {v}'\r\n          if (obj.hasOwnProperty(p = 'RANGE')) {\r\n            v = obj[p];\r\n            if (v && v.pop) {\r\n              intCheck(v[0], -MAX, -1, p);\r\n              intCheck(v[1], 1, MAX, p);\r\n              MIN_EXP = v[0];\r\n              MAX_EXP = v[1];\r\n            } else {\r\n              intCheck(v, -MAX, MAX, p);\r\n              if (v) {\r\n                MIN_EXP = -(MAX_EXP = v < 0 ? -v : v);\r\n              } else {\r\n                throw Error\r\n                 (bignumberError + p + ' cannot be zero: ' + v);\r\n              }\r\n            }\r\n          }\r\n\r\n          // CRYPTO {boolean} true or false.\r\n          // '[BigNumber Error] CRYPTO not true or false: {v}'\r\n          // '[BigNumber Error] crypto unavailable'\r\n          if (obj.hasOwnProperty(p = 'CRYPTO')) {\r\n            v = obj[p];\r\n            if (v === !!v) {\r\n              if (v) {\r\n                if (typeof crypto != 'undefined' && crypto &&\r\n                 (crypto.getRandomValues || crypto.randomBytes)) {\r\n                  CRYPTO = v;\r\n                } else {\r\n                  CRYPTO = !v;\r\n                  throw Error\r\n                   (bignumberError + 'crypto unavailable');\r\n                }\r\n              } else {\r\n                CRYPTO = v;\r\n              }\r\n            } else {\r\n              throw Error\r\n               (bignumberError + p + ' not true or false: ' + v);\r\n            }\r\n          }\r\n\r\n          // MODULO_MODE {number} Integer, 0 to 9 inclusive.\r\n          // '[BigNumber Error] MODULO_MODE {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'MODULO_MODE')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, 9, p);\r\n            MODULO_MODE = v;\r\n          }\r\n\r\n          // POW_PRECISION {number} Integer, 0 to MAX inclusive.\r\n          // '[BigNumber Error] POW_PRECISION {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'POW_PRECISION')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, MAX, p);\r\n            POW_PRECISION = v;\r\n          }\r\n\r\n          // FORMAT {object}\r\n          // '[BigNumber Error] FORMAT not an object: {v}'\r\n          if (obj.hasOwnProperty(p = 'FORMAT')) {\r\n            v = obj[p];\r\n            if (typeof v == 'object') FORMAT = v;\r\n            else throw Error\r\n             (bignumberError + p + ' not an object: ' + v);\r\n          }\r\n\r\n          // ALPHABET {string}\r\n          // '[BigNumber Error] ALPHABET invalid: {v}'\r\n          if (obj.hasOwnProperty(p = 'ALPHABET')) {\r\n            v = obj[p];\r\n\r\n            // Disallow if only one character,\r\n            // or if it contains '+', '-', '.', whitespace, or a repeated character.\r\n            if (typeof v == 'string' && !/^.$|[+-.\\s]|(.).*\\1/.test(v)) {\r\n              ALPHABET = v;\r\n            } else {\r\n              throw Error\r\n               (bignumberError + p + ' invalid: ' + v);\r\n            }\r\n          }\r\n\r\n        } else {\r\n\r\n          // '[BigNumber Error] Object expected: {v}'\r\n          throw Error\r\n           (bignumberError + 'Object expected: ' + obj);\r\n        }\r\n      }\r\n\r\n      return {\r\n        DECIMAL_PLACES: DECIMAL_PLACES,\r\n        ROUNDING_MODE: ROUNDING_MODE,\r\n        EXPONENTIAL_AT: [TO_EXP_NEG, TO_EXP_POS],\r\n        RANGE: [MIN_EXP, MAX_EXP],\r\n        CRYPTO: CRYPTO,\r\n        MODULO_MODE: MODULO_MODE,\r\n        POW_PRECISION: POW_PRECISION,\r\n        FORMAT: FORMAT,\r\n        ALPHABET: ALPHABET\r\n      };\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if v is a BigNumber instance, otherwise return false.\r\n     *\r\n     * If BigNumber.DEBUG is true, throw if a BigNumber instance is not well-formed.\r\n     *\r\n     * v {any}\r\n     *\r\n     * '[BigNumber Error] Invalid BigNumber: {v}'\r\n     */\r\n    BigNumber.isBigNumber = function (v) {\r\n      if (!v || v._isBigNumber !== true) return false;\r\n      if (!BigNumber.DEBUG) return true;\r\n\r\n      var i, n,\r\n        c = v.c,\r\n        e = v.e,\r\n        s = v.s;\r\n\r\n      out: if ({}.toString.call(c) == '[object Array]') {\r\n\r\n        if ((s === 1 || s === -1) && e >= -MAX && e <= MAX && e === mathfloor(e)) {\r\n\r\n          // If the first element is zero, the BigNumber value must be zero.\r\n          if (c[0] === 0) {\r\n            if (e === 0 && c.length === 1) return true;\r\n            break out;\r\n          }\r\n\r\n          // Calculate number of digits that c[0] should have, based on the exponent.\r\n          i = (e + 1) % LOG_BASE;\r\n          if (i < 1) i += LOG_BASE;\r\n\r\n          // Calculate number of digits of c[0].\r\n          //if (Math.ceil(Math.log(c[0] + 1) / Math.LN10) == i) {\r\n          if (String(c[0]).length == i) {\r\n\r\n            for (i = 0; i < c.length; i++) {\r\n              n = c[i];\r\n              if (n < 0 || n >= BASE || n !== mathfloor(n)) break out;\r\n            }\r\n\r\n            // Last element cannot be zero, unless it is the only element.\r\n            if (n !== 0) return true;\r\n          }\r\n        }\r\n\r\n      // Infinity/NaN\r\n      } else if (c === null && e === null && (s === null || s === 1 || s === -1)) {\r\n        return true;\r\n      }\r\n\r\n      throw Error\r\n        (bignumberError + 'Invalid BigNumber: ' + v);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the maximum of the arguments.\r\n     *\r\n     * arguments {number|string|BigNumber}\r\n     */\r\n    BigNumber.maximum = BigNumber.max = function () {\r\n      return maxOrMin(arguments, P.lt);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the minimum of the arguments.\r\n     *\r\n     * arguments {number|string|BigNumber}\r\n     */\r\n    BigNumber.minimum = BigNumber.min = function () {\r\n      return maxOrMin(arguments, P.gt);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber with a random value equal to or greater than 0 and less than 1,\r\n     * and with dp, or DECIMAL_PLACES if dp is omitted, decimal places (or less if trailing\r\n     * zeros are produced).\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp}'\r\n     * '[BigNumber Error] crypto unavailable'\r\n     */\r\n    BigNumber.random = (function () {\r\n      var pow2_53 = 0x20000000000000;\r\n\r\n      // Return a 53 bit integer n, where 0 <= n < 9007199254740992.\r\n      // Check if Math.random() produces more than 32 bits of randomness.\r\n      // If it does, assume at least 53 bits are produced, otherwise assume at least 30 bits.\r\n      // 0x40000000 is 2^30, 0x800000 is 2^23, 0x1fffff is 2^21 - 1.\r\n      var random53bitInt = (Math.random() * pow2_53) & 0x1fffff\r\n       ? function () { return mathfloor(Math.random() * pow2_53); }\r\n       : function () { return ((Math.random() * 0x40000000 | 0) * 0x800000) +\r\n         (Math.random() * 0x800000 | 0); };\r\n\r\n      return function (dp) {\r\n        var a, b, e, k, v,\r\n          i = 0,\r\n          c = [],\r\n          rand = new BigNumber(ONE);\r\n\r\n        if (dp == null) dp = DECIMAL_PLACES;\r\n        else intCheck(dp, 0, MAX);\r\n\r\n        k = mathceil(dp / LOG_BASE);\r\n\r\n        if (CRYPTO) {\r\n\r\n          // Browsers supporting crypto.getRandomValues.\r\n          if (crypto.getRandomValues) {\r\n\r\n            a = crypto.getRandomValues(new Uint32Array(k *= 2));\r\n\r\n            for (; i < k;) {\r\n\r\n              // 53 bits:\r\n              // ((Math.pow(2, 32) - 1) * Math.pow(2, 21)).toString(2)\r\n              // 11111 11111111 11111111 11111111 11100000 00000000 00000000\r\n              // ((Math.pow(2, 32) - 1) >>> 11).toString(2)\r\n              //                                     11111 11111111 11111111\r\n              // 0x20000 is 2^21.\r\n              v = a[i] * 0x20000 + (a[i + 1] >>> 11);\r\n\r\n              // Rejection sampling:\r\n              // 0 <= v < 9007199254740992\r\n              // Probability that v >= 9e15, is\r\n              // 7199254740992 / 9007199254740992 ~= 0.0008, i.e. 1 in 1251\r\n              if (v >= 9e15) {\r\n                b = crypto.getRandomValues(new Uint32Array(2));\r\n                a[i] = b[0];\r\n                a[i + 1] = b[1];\r\n              } else {\r\n\r\n                // 0 <= v <= 8999999999999999\r\n                // 0 <= (v % 1e14) <= 99999999999999\r\n                c.push(v % 1e14);\r\n                i += 2;\r\n              }\r\n            }\r\n            i = k / 2;\r\n\r\n          // Node.js supporting crypto.randomBytes.\r\n          } else if (crypto.randomBytes) {\r\n\r\n            // buffer\r\n            a = crypto.randomBytes(k *= 7);\r\n\r\n            for (; i < k;) {\r\n\r\n              // 0x1000000000000 is 2^48, 0x10000000000 is 2^40\r\n              // 0x100000000 is 2^32, 0x1000000 is 2^24\r\n              // 11111 11111111 11111111 11111111 11111111 11111111 11111111\r\n              // 0 <= v < 9007199254740992\r\n              v = ((a[i] & 31) * 0x1000000000000) + (a[i + 1] * 0x10000000000) +\r\n                 (a[i + 2] * 0x100000000) + (a[i + 3] * 0x1000000) +\r\n                 (a[i + 4] << 16) + (a[i + 5] << 8) + a[i + 6];\r\n\r\n              if (v >= 9e15) {\r\n                crypto.randomBytes(7).copy(a, i);\r\n              } else {\r\n\r\n                // 0 <= (v % 1e14) <= 99999999999999\r\n                c.push(v % 1e14);\r\n                i += 7;\r\n              }\r\n            }\r\n            i = k / 7;\r\n          } else {\r\n            CRYPTO = false;\r\n            throw Error\r\n             (bignumberError + 'crypto unavailable');\r\n          }\r\n        }\r\n\r\n        // Use Math.random.\r\n        if (!CRYPTO) {\r\n\r\n          for (; i < k;) {\r\n            v = random53bitInt();\r\n            if (v < 9e15) c[i++] = v % 1e14;\r\n          }\r\n        }\r\n\r\n        k = c[--i];\r\n        dp %= LOG_BASE;\r\n\r\n        // Convert trailing digits to zeros according to dp.\r\n        if (k && dp) {\r\n          v = POWS_TEN[LOG_BASE - dp];\r\n          c[i] = mathfloor(k / v) * v;\r\n        }\r\n\r\n        // Remove trailing elements which are zero.\r\n        for (; c[i] === 0; c.pop(), i--);\r\n\r\n        // Zero?\r\n        if (i < 0) {\r\n          c = [e = 0];\r\n        } else {\r\n\r\n          // Remove leading elements which are zero and adjust exponent accordingly.\r\n          for (e = -1 ; c[0] === 0; c.splice(0, 1), e -= LOG_BASE);\r\n\r\n          // Count the digits of the first element of c to determine leading zeros, and...\r\n          for (i = 1, v = c[0]; v >= 10; v /= 10, i++);\r\n\r\n          // adjust the exponent accordingly.\r\n          if (i < LOG_BASE) e -= LOG_BASE - i;\r\n        }\r\n\r\n        rand.e = e;\r\n        rand.c = c;\r\n        return rand;\r\n      };\r\n    })();\r\n\r\n\r\n    /*\r\n     * Return a BigNumber whose value is the sum of the arguments.\r\n     *\r\n     * arguments {number|string|BigNumber}\r\n     */\r\n    BigNumber.sum = function () {\r\n      var i = 1,\r\n        args = arguments,\r\n        sum = new BigNumber(args[0]);\r\n      for (; i < args.length;) sum = sum.plus(args[i++]);\r\n      return sum;\r\n    };\r\n\r\n\r\n    // PRIVATE FUNCTIONS\r\n\r\n\r\n    // Called by BigNumber and BigNumber.prototype.toString.\r\n    convertBase = (function () {\r\n      var decimal = '0123456789';\r\n\r\n      /*\r\n       * Convert string of baseIn to an array of numbers of baseOut.\r\n       * Eg. toBaseOut('255', 10, 16) returns [15, 15].\r\n       * Eg. toBaseOut('ff', 16, 10) returns [2, 5, 5].\r\n       */\r\n      function toBaseOut(str, baseIn, baseOut, alphabet) {\r\n        var j,\r\n          arr = [0],\r\n          arrL,\r\n          i = 0,\r\n          len = str.length;\r\n\r\n        for (; i < len;) {\r\n          for (arrL = arr.length; arrL--; arr[arrL] *= baseIn);\r\n\r\n          arr[0] += alphabet.indexOf(str.charAt(i++));\r\n\r\n          for (j = 0; j < arr.length; j++) {\r\n\r\n            if (arr[j] > baseOut - 1) {\r\n              if (arr[j + 1] == null) arr[j + 1] = 0;\r\n              arr[j + 1] += arr[j] / baseOut | 0;\r\n              arr[j] %= baseOut;\r\n            }\r\n          }\r\n        }\r\n\r\n        return arr.reverse();\r\n      }\r\n\r\n      // Convert a numeric string of baseIn to a numeric string of baseOut.\r\n      // If the caller is toString, we are converting from base 10 to baseOut.\r\n      // If the caller is BigNumber, we are converting from baseIn to base 10.\r\n      return function (str, baseIn, baseOut, sign, callerIsToString) {\r\n        var alphabet, d, e, k, r, x, xc, y,\r\n          i = str.indexOf('.'),\r\n          dp = DECIMAL_PLACES,\r\n          rm = ROUNDING_MODE;\r\n\r\n        // Non-integer.\r\n        if (i >= 0) {\r\n          k = POW_PRECISION;\r\n\r\n          // Unlimited precision.\r\n          POW_PRECISION = 0;\r\n          str = str.replace('.', '');\r\n          y = new BigNumber(baseIn);\r\n          x = y.pow(str.length - i);\r\n          POW_PRECISION = k;\r\n\r\n          // Convert str as if an integer, then restore the fraction part by dividing the\r\n          // result by its base raised to a power.\r\n\r\n          y.c = toBaseOut(toFixedPoint(coeffToString(x.c), x.e, '0'),\r\n           10, baseOut, decimal);\r\n          y.e = y.c.length;\r\n        }\r\n\r\n        // Convert the number as integer.\r\n\r\n        xc = toBaseOut(str, baseIn, baseOut, callerIsToString\r\n         ? (alphabet = ALPHABET, decimal)\r\n         : (alphabet = decimal, ALPHABET));\r\n\r\n        // xc now represents str as an integer and converted to baseOut. e is the exponent.\r\n        e = k = xc.length;\r\n\r\n        // Remove trailing zeros.\r\n        for (; xc[--k] == 0; xc.pop());\r\n\r\n        // Zero?\r\n        if (!xc[0]) return alphabet.charAt(0);\r\n\r\n        // Does str represent an integer? If so, no need for the division.\r\n        if (i < 0) {\r\n          --e;\r\n        } else {\r\n          x.c = xc;\r\n          x.e = e;\r\n\r\n          // The sign is needed for correct rounding.\r\n          x.s = sign;\r\n          x = div(x, y, dp, rm, baseOut);\r\n          xc = x.c;\r\n          r = x.r;\r\n          e = x.e;\r\n        }\r\n\r\n        // xc now represents str converted to baseOut.\r\n\r\n        // THe index of the rounding digit.\r\n        d = e + dp + 1;\r\n\r\n        // The rounding digit: the digit to the right of the digit that may be rounded up.\r\n        i = xc[d];\r\n\r\n        // Look at the rounding digits and mode to determine whether to round up.\r\n\r\n        k = baseOut / 2;\r\n        r = r || d < 0 || xc[d + 1] != null;\r\n\r\n        r = rm < 4 ? (i != null || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n              : i > k || i == k &&(rm == 4 || r || rm == 6 && xc[d - 1] & 1 ||\r\n               rm == (x.s < 0 ? 8 : 7));\r\n\r\n        // If the index of the rounding digit is not greater than zero, or xc represents\r\n        // zero, then the result of the base conversion is zero or, if rounding up, a value\r\n        // such as 0.00001.\r\n        if (d < 1 || !xc[0]) {\r\n\r\n          // 1^-dp or 0\r\n          str = r ? toFixedPoint(alphabet.charAt(1), -dp, alphabet.charAt(0)) : alphabet.charAt(0);\r\n        } else {\r\n\r\n          // Truncate xc to the required number of decimal places.\r\n          xc.length = d;\r\n\r\n          // Round up?\r\n          if (r) {\r\n\r\n            // Rounding up may mean the previous digit has to be rounded up and so on.\r\n            for (--baseOut; ++xc[--d] > baseOut;) {\r\n              xc[d] = 0;\r\n\r\n              if (!d) {\r\n                ++e;\r\n                xc = [1].concat(xc);\r\n              }\r\n            }\r\n          }\r\n\r\n          // Determine trailing zeros.\r\n          for (k = xc.length; !xc[--k];);\r\n\r\n          // E.g. [4, 11, 15] becomes 4bf.\r\n          for (i = 0, str = ''; i <= k; str += alphabet.charAt(xc[i++]));\r\n\r\n          // Add leading zeros, decimal point and trailing zeros as required.\r\n          str = toFixedPoint(str, e, alphabet.charAt(0));\r\n        }\r\n\r\n        // The caller will add the sign.\r\n        return str;\r\n      };\r\n    })();\r\n\r\n\r\n    // Perform division in the specified base. Called by div and convertBase.\r\n    div = (function () {\r\n\r\n      // Assume non-zero x and k.\r\n      function multiply(x, k, base) {\r\n        var m, temp, xlo, xhi,\r\n          carry = 0,\r\n          i = x.length,\r\n          klo = k % SQRT_BASE,\r\n          khi = k / SQRT_BASE | 0;\r\n\r\n        for (x = x.slice(); i--;) {\r\n          xlo = x[i] % SQRT_BASE;\r\n          xhi = x[i] / SQRT_BASE | 0;\r\n          m = khi * xlo + xhi * klo;\r\n          temp = klo * xlo + ((m % SQRT_BASE) * SQRT_BASE) + carry;\r\n          carry = (temp / base | 0) + (m / SQRT_BASE | 0) + khi * xhi;\r\n          x[i] = temp % base;\r\n        }\r\n\r\n        if (carry) x = [carry].concat(x);\r\n\r\n        return x;\r\n      }\r\n\r\n      function compare(a, b, aL, bL) {\r\n        var i, cmp;\r\n\r\n        if (aL != bL) {\r\n          cmp = aL > bL ? 1 : -1;\r\n        } else {\r\n\r\n          for (i = cmp = 0; i < aL; i++) {\r\n\r\n            if (a[i] != b[i]) {\r\n              cmp = a[i] > b[i] ? 1 : -1;\r\n              break;\r\n            }\r\n          }\r\n        }\r\n\r\n        return cmp;\r\n      }\r\n\r\n      function subtract(a, b, aL, base) {\r\n        var i = 0;\r\n\r\n        // Subtract b from a.\r\n        for (; aL--;) {\r\n          a[aL] -= i;\r\n          i = a[aL] < b[aL] ? 1 : 0;\r\n          a[aL] = i * base + a[aL] - b[aL];\r\n        }\r\n\r\n        // Remove leading zeros.\r\n        for (; !a[0] && a.length > 1; a.splice(0, 1));\r\n      }\r\n\r\n      // x: dividend, y: divisor.\r\n      return function (x, y, dp, rm, base) {\r\n        var cmp, e, i, more, n, prod, prodL, q, qc, rem, remL, rem0, xi, xL, yc0,\r\n          yL, yz,\r\n          s = x.s == y.s ? 1 : -1,\r\n          xc = x.c,\r\n          yc = y.c;\r\n\r\n        // Either NaN, Infinity or 0?\r\n        if (!xc || !xc[0] || !yc || !yc[0]) {\r\n\r\n          return new BigNumber(\r\n\r\n           // Return NaN if either NaN, or both Infinity or 0.\r\n           !x.s || !y.s || (xc ? yc && xc[0] == yc[0] : !yc) ? NaN :\r\n\r\n            // Return ±0 if x is ±0 or y is ±Infinity, or return ±Infinity as y is ±0.\r\n            xc && xc[0] == 0 || !yc ? s * 0 : s / 0\r\n         );\r\n        }\r\n\r\n        q = new BigNumber(s);\r\n        qc = q.c = [];\r\n        e = x.e - y.e;\r\n        s = dp + e + 1;\r\n\r\n        if (!base) {\r\n          base = BASE;\r\n          e = bitFloor(x.e / LOG_BASE) - bitFloor(y.e / LOG_BASE);\r\n          s = s / LOG_BASE | 0;\r\n        }\r\n\r\n        // Result exponent may be one less then the current value of e.\r\n        // The coefficients of the BigNumbers from convertBase may have trailing zeros.\r\n        for (i = 0; yc[i] == (xc[i] || 0); i++);\r\n\r\n        if (yc[i] > (xc[i] || 0)) e--;\r\n\r\n        if (s < 0) {\r\n          qc.push(1);\r\n          more = true;\r\n        } else {\r\n          xL = xc.length;\r\n          yL = yc.length;\r\n          i = 0;\r\n          s += 2;\r\n\r\n          // Normalise xc and yc so highest order digit of yc is >= base / 2.\r\n\r\n          n = mathfloor(base / (yc[0] + 1));\r\n\r\n          // Not necessary, but to handle odd bases where yc[0] == (base / 2) - 1.\r\n          // if (n > 1 || n++ == 1 && yc[0] < base / 2) {\r\n          if (n > 1) {\r\n            yc = multiply(yc, n, base);\r\n            xc = multiply(xc, n, base);\r\n            yL = yc.length;\r\n            xL = xc.length;\r\n          }\r\n\r\n          xi = yL;\r\n          rem = xc.slice(0, yL);\r\n          remL = rem.length;\r\n\r\n          // Add zeros to make remainder as long as divisor.\r\n          for (; remL < yL; rem[remL++] = 0);\r\n          yz = yc.slice();\r\n          yz = [0].concat(yz);\r\n          yc0 = yc[0];\r\n          if (yc[1] >= base / 2) yc0++;\r\n          // Not necessary, but to prevent trial digit n > base, when using base 3.\r\n          // else if (base == 3 && yc0 == 1) yc0 = 1 + 1e-15;\r\n\r\n          do {\r\n            n = 0;\r\n\r\n            // Compare divisor and remainder.\r\n            cmp = compare(yc, rem, yL, remL);\r\n\r\n            // If divisor < remainder.\r\n            if (cmp < 0) {\r\n\r\n              // Calculate trial digit, n.\r\n\r\n              rem0 = rem[0];\r\n              if (yL != remL) rem0 = rem0 * base + (rem[1] || 0);\r\n\r\n              // n is how many times the divisor goes into the current remainder.\r\n              n = mathfloor(rem0 / yc0);\r\n\r\n              //  Algorithm:\r\n              //  product = divisor multiplied by trial digit (n).\r\n              //  Compare product and remainder.\r\n              //  If product is greater than remainder:\r\n              //    Subtract divisor from product, decrement trial digit.\r\n              //  Subtract product from remainder.\r\n              //  If product was less than remainder at the last compare:\r\n              //    Compare new remainder and divisor.\r\n              //    If remainder is greater than divisor:\r\n              //      Subtract divisor from remainder, increment trial digit.\r\n\r\n              if (n > 1) {\r\n\r\n                // n may be > base only when base is 3.\r\n                if (n >= base) n = base - 1;\r\n\r\n                // product = divisor * trial digit.\r\n                prod = multiply(yc, n, base);\r\n                prodL = prod.length;\r\n                remL = rem.length;\r\n\r\n                // Compare product and remainder.\r\n                // If product > remainder then trial digit n too high.\r\n                // n is 1 too high about 5% of the time, and is not known to have\r\n                // ever been more than 1 too high.\r\n                while (compare(prod, rem, prodL, remL) == 1) {\r\n                  n--;\r\n\r\n                  // Subtract divisor from product.\r\n                  subtract(prod, yL < prodL ? yz : yc, prodL, base);\r\n                  prodL = prod.length;\r\n                  cmp = 1;\r\n                }\r\n              } else {\r\n\r\n                // n is 0 or 1, cmp is -1.\r\n                // If n is 0, there is no need to compare yc and rem again below,\r\n                // so change cmp to 1 to avoid it.\r\n                // If n is 1, leave cmp as -1, so yc and rem are compared again.\r\n                if (n == 0) {\r\n\r\n                  // divisor < remainder, so n must be at least 1.\r\n                  cmp = n = 1;\r\n                }\r\n\r\n                // product = divisor\r\n                prod = yc.slice();\r\n                prodL = prod.length;\r\n              }\r\n\r\n              if (prodL < remL) prod = [0].concat(prod);\r\n\r\n              // Subtract product from remainder.\r\n              subtract(rem, prod, remL, base);\r\n              remL = rem.length;\r\n\r\n               // If product was < remainder.\r\n              if (cmp == -1) {\r\n\r\n                // Compare divisor and new remainder.\r\n                // If divisor < new remainder, subtract divisor from remainder.\r\n                // Trial digit n too low.\r\n                // n is 1 too low about 5% of the time, and very rarely 2 too low.\r\n                while (compare(yc, rem, yL, remL) < 1) {\r\n                  n++;\r\n\r\n                  // Subtract divisor from remainder.\r\n                  subtract(rem, yL < remL ? yz : yc, remL, base);\r\n                  remL = rem.length;\r\n                }\r\n              }\r\n            } else if (cmp === 0) {\r\n              n++;\r\n              rem = [0];\r\n            } // else cmp === 1 and n will be 0\r\n\r\n            // Add the next digit, n, to the result array.\r\n            qc[i++] = n;\r\n\r\n            // Update the remainder.\r\n            if (rem[0]) {\r\n              rem[remL++] = xc[xi] || 0;\r\n            } else {\r\n              rem = [xc[xi]];\r\n              remL = 1;\r\n            }\r\n          } while ((xi++ < xL || rem[0] != null) && s--);\r\n\r\n          more = rem[0] != null;\r\n\r\n          // Leading zero?\r\n          if (!qc[0]) qc.splice(0, 1);\r\n        }\r\n\r\n        if (base == BASE) {\r\n\r\n          // To calculate q.e, first get the number of digits of qc[0].\r\n          for (i = 1, s = qc[0]; s >= 10; s /= 10, i++);\r\n\r\n          round(q, dp + (q.e = i + e * LOG_BASE - 1) + 1, rm, more);\r\n\r\n        // Caller is convertBase.\r\n        } else {\r\n          q.e = e;\r\n          q.r = +more;\r\n        }\r\n\r\n        return q;\r\n      };\r\n    })();\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of BigNumber n in fixed-point or exponential\r\n     * notation rounded to the specified decimal places or significant digits.\r\n     *\r\n     * n: a BigNumber.\r\n     * i: the index of the last digit required (i.e. the digit that may be rounded up).\r\n     * rm: the rounding mode.\r\n     * id: 1 (toExponential) or 2 (toPrecision).\r\n     */\r\n    function format(n, i, rm, id) {\r\n      var c0, e, ne, len, str;\r\n\r\n      if (rm == null) rm = ROUNDING_MODE;\r\n      else intCheck(rm, 0, 8);\r\n\r\n      if (!n.c) return n.toString();\r\n\r\n      c0 = n.c[0];\r\n      ne = n.e;\r\n\r\n      if (i == null) {\r\n        str = coeffToString(n.c);\r\n        str = id == 1 || id == 2 && (ne <= TO_EXP_NEG || ne >= TO_EXP_POS)\r\n         ? toExponential(str, ne)\r\n         : toFixedPoint(str, ne, '0');\r\n      } else {\r\n        n = round(new BigNumber(n), i, rm);\r\n\r\n        // n.e may have changed if the value was rounded up.\r\n        e = n.e;\r\n\r\n        str = coeffToString(n.c);\r\n        len = str.length;\r\n\r\n        // toPrecision returns exponential notation if the number of significant digits\r\n        // specified is less than the number of digits necessary to represent the integer\r\n        // part of the value in fixed-point notation.\r\n\r\n        // Exponential notation.\r\n        if (id == 1 || id == 2 && (i <= e || e <= TO_EXP_NEG)) {\r\n\r\n          // Append zeros?\r\n          for (; len < i; str += '0', len++);\r\n          str = toExponential(str, e);\r\n\r\n        // Fixed-point notation.\r\n        } else {\r\n          i -= ne;\r\n          str = toFixedPoint(str, e, '0');\r\n\r\n          // Append zeros?\r\n          if (e + 1 > len) {\r\n            if (--i > 0) for (str += '.'; i--; str += '0');\r\n          } else {\r\n            i += e - len;\r\n            if (i > 0) {\r\n              if (e + 1 == len) str += '.';\r\n              for (; i--; str += '0');\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      return n.s < 0 && c0 ? '-' + str : str;\r\n    }\r\n\r\n\r\n    // Handle BigNumber.max and BigNumber.min.\r\n    function maxOrMin(args, method) {\r\n      var n,\r\n        i = 1,\r\n        m = new BigNumber(args[0]);\r\n\r\n      for (; i < args.length; i++) {\r\n        n = new BigNumber(args[i]);\r\n\r\n        // If any number is NaN, return NaN.\r\n        if (!n.s) {\r\n          m = n;\r\n          break;\r\n        } else if (method.call(m, n)) {\r\n          m = n;\r\n        }\r\n      }\r\n\r\n      return m;\r\n    }\r\n\r\n\r\n    /*\r\n     * Strip trailing zeros, calculate base 10 exponent and check against MIN_EXP and MAX_EXP.\r\n     * Called by minus, plus and times.\r\n     */\r\n    function normalise(n, c, e) {\r\n      var i = 1,\r\n        j = c.length;\r\n\r\n       // Remove trailing zeros.\r\n      for (; !c[--j]; c.pop());\r\n\r\n      // Calculate the base 10 exponent. First get the number of digits of c[0].\r\n      for (j = c[0]; j >= 10; j /= 10, i++);\r\n\r\n      // Overflow?\r\n      if ((e = i + e * LOG_BASE - 1) > MAX_EXP) {\r\n\r\n        // Infinity.\r\n        n.c = n.e = null;\r\n\r\n      // Underflow?\r\n      } else if (e < MIN_EXP) {\r\n\r\n        // Zero.\r\n        n.c = [n.e = 0];\r\n      } else {\r\n        n.e = e;\r\n        n.c = c;\r\n      }\r\n\r\n      return n;\r\n    }\r\n\r\n\r\n    // Handle values that fail the validity test in BigNumber.\r\n    parseNumeric = (function () {\r\n      var basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i,\r\n        dotAfter = /^([^.]+)\\.$/,\r\n        dotBefore = /^\\.([^.]+)$/,\r\n        isInfinityOrNaN = /^-?(Infinity|NaN)$/,\r\n        whitespaceOrPlus = /^\\s*\\+(?=[\\w.])|^\\s+|\\s+$/g;\r\n\r\n      return function (x, str, isNum, b) {\r\n        var base,\r\n          s = isNum ? str : str.replace(whitespaceOrPlus, '');\r\n\r\n        // No exception on ±Infinity or NaN.\r\n        if (isInfinityOrNaN.test(s)) {\r\n          x.s = isNaN(s) ? null : s < 0 ? -1 : 1;\r\n        } else {\r\n          if (!isNum) {\r\n\r\n            // basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i\r\n            s = s.replace(basePrefix, function (m, p1, p2) {\r\n              base = (p2 = p2.toLowerCase()) == 'x' ? 16 : p2 == 'b' ? 2 : 8;\r\n              return !b || b == base ? p1 : m;\r\n            });\r\n\r\n            if (b) {\r\n              base = b;\r\n\r\n              // E.g. '1.' to '1', '.1' to '0.1'\r\n              s = s.replace(dotAfter, '$1').replace(dotBefore, '0.$1');\r\n            }\r\n\r\n            if (str != s) return new BigNumber(s, base);\r\n          }\r\n\r\n          // '[BigNumber Error] Not a number: {n}'\r\n          // '[BigNumber Error] Not a base {b} number: {n}'\r\n          if (BigNumber.DEBUG) {\r\n            throw Error\r\n              (bignumberError + 'Not a' + (b ? ' base ' + b : '') + ' number: ' + str);\r\n          }\r\n\r\n          // NaN\r\n          x.s = null;\r\n        }\r\n\r\n        x.c = x.e = null;\r\n      }\r\n    })();\r\n\r\n\r\n    /*\r\n     * Round x to sd significant digits using rounding mode rm. Check for over/under-flow.\r\n     * If r is truthy, it is known that there are more digits after the rounding digit.\r\n     */\r\n    function round(x, sd, rm, r) {\r\n      var d, i, j, k, n, ni, rd,\r\n        xc = x.c,\r\n        pows10 = POWS_TEN;\r\n\r\n      // if x is not Infinity or NaN...\r\n      if (xc) {\r\n\r\n        // rd is the rounding digit, i.e. the digit after the digit that may be rounded up.\r\n        // n is a base 1e14 number, the value of the element of array x.c containing rd.\r\n        // ni is the index of n within x.c.\r\n        // d is the number of digits of n.\r\n        // i is the index of rd within n including leading zeros.\r\n        // j is the actual index of rd within n (if < 0, rd is a leading zero).\r\n        out: {\r\n\r\n          // Get the number of digits of the first element of xc.\r\n          for (d = 1, k = xc[0]; k >= 10; k /= 10, d++);\r\n          i = sd - d;\r\n\r\n          // If the rounding digit is in the first element of xc...\r\n          if (i < 0) {\r\n            i += LOG_BASE;\r\n            j = sd;\r\n            n = xc[ni = 0];\r\n\r\n            // Get the rounding digit at index j of n.\r\n            rd = n / pows10[d - j - 1] % 10 | 0;\r\n          } else {\r\n            ni = mathceil((i + 1) / LOG_BASE);\r\n\r\n            if (ni >= xc.length) {\r\n\r\n              if (r) {\r\n\r\n                // Needed by sqrt.\r\n                for (; xc.length <= ni; xc.push(0));\r\n                n = rd = 0;\r\n                d = 1;\r\n                i %= LOG_BASE;\r\n                j = i - LOG_BASE + 1;\r\n              } else {\r\n                break out;\r\n              }\r\n            } else {\r\n              n = k = xc[ni];\r\n\r\n              // Get the number of digits of n.\r\n              for (d = 1; k >= 10; k /= 10, d++);\r\n\r\n              // Get the index of rd within n.\r\n              i %= LOG_BASE;\r\n\r\n              // Get the index of rd within n, adjusted for leading zeros.\r\n              // The number of leading zeros of n is given by LOG_BASE - d.\r\n              j = i - LOG_BASE + d;\r\n\r\n              // Get the rounding digit at index j of n.\r\n              rd = j < 0 ? 0 : n / pows10[d - j - 1] % 10 | 0;\r\n            }\r\n          }\r\n\r\n          r = r || sd < 0 ||\r\n\r\n          // Are there any non-zero digits after the rounding digit?\r\n          // The expression  n % pows10[d - j - 1]  returns all digits of n to the right\r\n          // of the digit at j, e.g. if n is 908714 and j is 2, the expression gives 714.\r\n           xc[ni + 1] != null || (j < 0 ? n : n % pows10[d - j - 1]);\r\n\r\n          r = rm < 4\r\n           ? (rd || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n           : rd > 5 || rd == 5 && (rm == 4 || r || rm == 6 &&\r\n\r\n            // Check whether the digit to the left of the rounding digit is odd.\r\n            ((i > 0 ? j > 0 ? n / pows10[d - j] : 0 : xc[ni - 1]) % 10) & 1 ||\r\n             rm == (x.s < 0 ? 8 : 7));\r\n\r\n          if (sd < 1 || !xc[0]) {\r\n            xc.length = 0;\r\n\r\n            if (r) {\r\n\r\n              // Convert sd to decimal places.\r\n              sd -= x.e + 1;\r\n\r\n              // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n              xc[0] = pows10[(LOG_BASE - sd % LOG_BASE) % LOG_BASE];\r\n              x.e = -sd || 0;\r\n            } else {\r\n\r\n              // Zero.\r\n              xc[0] = x.e = 0;\r\n            }\r\n\r\n            return x;\r\n          }\r\n\r\n          // Remove excess digits.\r\n          if (i == 0) {\r\n            xc.length = ni;\r\n            k = 1;\r\n            ni--;\r\n          } else {\r\n            xc.length = ni + 1;\r\n            k = pows10[LOG_BASE - i];\r\n\r\n            // E.g. 56700 becomes 56000 if 7 is the rounding digit.\r\n            // j > 0 means i > number of leading zeros of n.\r\n            xc[ni] = j > 0 ? mathfloor(n / pows10[d - j] % pows10[j]) * k : 0;\r\n          }\r\n\r\n          // Round up?\r\n          if (r) {\r\n\r\n            for (; ;) {\r\n\r\n              // If the digit to be rounded up is in the first element of xc...\r\n              if (ni == 0) {\r\n\r\n                // i will be the length of xc[0] before k is added.\r\n                for (i = 1, j = xc[0]; j >= 10; j /= 10, i++);\r\n                j = xc[0] += k;\r\n                for (k = 1; j >= 10; j /= 10, k++);\r\n\r\n                // if i != k the length has increased.\r\n                if (i != k) {\r\n                  x.e++;\r\n                  if (xc[0] == BASE) xc[0] = 1;\r\n                }\r\n\r\n                break;\r\n              } else {\r\n                xc[ni] += k;\r\n                if (xc[ni] != BASE) break;\r\n                xc[ni--] = 0;\r\n                k = 1;\r\n              }\r\n            }\r\n          }\r\n\r\n          // Remove trailing zeros.\r\n          for (i = xc.length; xc[--i] === 0; xc.pop());\r\n        }\r\n\r\n        // Overflow? Infinity.\r\n        if (x.e > MAX_EXP) {\r\n          x.c = x.e = null;\r\n\r\n        // Underflow? Zero.\r\n        } else if (x.e < MIN_EXP) {\r\n          x.c = [x.e = 0];\r\n        }\r\n      }\r\n\r\n      return x;\r\n    }\r\n\r\n\r\n    function valueOf(n) {\r\n      var str,\r\n        e = n.e;\r\n\r\n      if (e === null) return n.toString();\r\n\r\n      str = coeffToString(n.c);\r\n\r\n      str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n        ? toExponential(str, e)\r\n        : toFixedPoint(str, e, '0');\r\n\r\n      return n.s < 0 ? '-' + str : str;\r\n    }\r\n\r\n\r\n    // PROTOTYPE/INSTANCE METHODS\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the absolute value of this BigNumber.\r\n     */\r\n    P.absoluteValue = P.abs = function () {\r\n      var x = new BigNumber(this);\r\n      if (x.s < 0) x.s = 1;\r\n      return x;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return\r\n     *   1 if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n     *   -1 if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n     *   0 if they have the same value,\r\n     *   or null if the value of either is NaN.\r\n     */\r\n    P.comparedTo = function (y, b) {\r\n      return compare(this, new BigNumber(y, b));\r\n    };\r\n\r\n\r\n    /*\r\n     * If dp is undefined or null or true or false, return the number of decimal places of the\r\n     * value of this BigNumber, or null if the value of this BigNumber is ±Infinity or NaN.\r\n     *\r\n     * Otherwise, if dp is a number, return a new BigNumber whose value is the value of this\r\n     * BigNumber rounded to a maximum of dp decimal places using rounding mode rm, or\r\n     * ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * [dp] {number} Decimal places: integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     */\r\n    P.decimalPlaces = P.dp = function (dp, rm) {\r\n      var c, n, v,\r\n        x = this;\r\n\r\n      if (dp != null) {\r\n        intCheck(dp, 0, MAX);\r\n        if (rm == null) rm = ROUNDING_MODE;\r\n        else intCheck(rm, 0, 8);\r\n\r\n        return round(new BigNumber(x), dp + x.e + 1, rm);\r\n      }\r\n\r\n      if (!(c = x.c)) return null;\r\n      n = ((v = c.length - 1) - bitFloor(this.e / LOG_BASE)) * LOG_BASE;\r\n\r\n      // Subtract the number of trailing zeros of the last number.\r\n      if (v = c[v]) for (; v % 10 == 0; v /= 10, n--);\r\n      if (n < 0) n = 0;\r\n\r\n      return n;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n / 0 = I\r\n     *  n / N = N\r\n     *  n / I = 0\r\n     *  0 / n = 0\r\n     *  0 / 0 = N\r\n     *  0 / N = N\r\n     *  0 / I = 0\r\n     *  N / n = N\r\n     *  N / 0 = N\r\n     *  N / N = N\r\n     *  N / I = N\r\n     *  I / n = I\r\n     *  I / 0 = I\r\n     *  I / N = N\r\n     *  I / I = N\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber divided by the value of\r\n     * BigNumber(y, b), rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n     */\r\n    P.dividedBy = P.div = function (y, b) {\r\n      return div(this, new BigNumber(y, b), DECIMAL_PLACES, ROUNDING_MODE);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the integer part of dividing the value of this\r\n     * BigNumber by the value of BigNumber(y, b).\r\n     */\r\n    P.dividedToIntegerBy = P.idiv = function (y, b) {\r\n      return div(this, new BigNumber(y, b), 0, 1);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a BigNumber whose value is the value of this BigNumber exponentiated by n.\r\n     *\r\n     * If m is present, return the result modulo m.\r\n     * If n is negative round according to DECIMAL_PLACES and ROUNDING_MODE.\r\n     * If POW_PRECISION is non-zero and m is not present, round to POW_PRECISION using ROUNDING_MODE.\r\n     *\r\n     * The modular power operation works efficiently when x, n, and m are integers, otherwise it\r\n     * is equivalent to calculating x.exponentiatedBy(n).modulo(m) with a POW_PRECISION of 0.\r\n     *\r\n     * n {number|string|BigNumber} The exponent. An integer.\r\n     * [m] {number|string|BigNumber} The modulus.\r\n     *\r\n     * '[BigNumber Error] Exponent not an integer: {n}'\r\n     */\r\n    P.exponentiatedBy = P.pow = function (n, m) {\r\n      var half, isModExp, i, k, more, nIsBig, nIsNeg, nIsOdd, y,\r\n        x = this;\r\n\r\n      n = new BigNumber(n);\r\n\r\n      // Allow NaN and ±Infinity, but not other non-integers.\r\n      if (n.c && !n.isInteger()) {\r\n        throw Error\r\n          (bignumberError + 'Exponent not an integer: ' + valueOf(n));\r\n      }\r\n\r\n      if (m != null) m = new BigNumber(m);\r\n\r\n      // Exponent of MAX_SAFE_INTEGER is 15.\r\n      nIsBig = n.e > 14;\r\n\r\n      // If x is NaN, ±Infinity, ±0 or ±1, or n is ±Infinity, NaN or ±0.\r\n      if (!x.c || !x.c[0] || x.c[0] == 1 && !x.e && x.c.length == 1 || !n.c || !n.c[0]) {\r\n\r\n        // The sign of the result of pow when x is negative depends on the evenness of n.\r\n        // If +n overflows to ±Infinity, the evenness of n would be not be known.\r\n        y = new BigNumber(Math.pow(+valueOf(x), nIsBig ? 2 - isOdd(n) : +valueOf(n)));\r\n        return m ? y.mod(m) : y;\r\n      }\r\n\r\n      nIsNeg = n.s < 0;\r\n\r\n      if (m) {\r\n\r\n        // x % m returns NaN if abs(m) is zero, or m is NaN.\r\n        if (m.c ? !m.c[0] : !m.s) return new BigNumber(NaN);\r\n\r\n        isModExp = !nIsNeg && x.isInteger() && m.isInteger();\r\n\r\n        if (isModExp) x = x.mod(m);\r\n\r\n      // Overflow to ±Infinity: >=2**1e10 or >=1.0000024**1e15.\r\n      // Underflow to ±0: <=0.79**1e10 or <=0.9999975**1e15.\r\n      } else if (n.e > 9 && (x.e > 0 || x.e < -1 || (x.e == 0\r\n        // [1, 240000000]\r\n        ? x.c[0] > 1 || nIsBig && x.c[1] >= 24e7\r\n        // [80000000000000]  [99999750000000]\r\n        : x.c[0] < 8e13 || nIsBig && x.c[0] <= 9999975e7))) {\r\n\r\n        // If x is negative and n is odd, k = -0, else k = 0.\r\n        k = x.s < 0 && isOdd(n) ? -0 : 0;\r\n\r\n        // If x >= 1, k = ±Infinity.\r\n        if (x.e > -1) k = 1 / k;\r\n\r\n        // If n is negative return ±0, else return ±Infinity.\r\n        return new BigNumber(nIsNeg ? 1 / k : k);\r\n\r\n      } else if (POW_PRECISION) {\r\n\r\n        // Truncating each coefficient array to a length of k after each multiplication\r\n        // equates to truncating significant digits to POW_PRECISION + [28, 41],\r\n        // i.e. there will be a minimum of 28 guard digits retained.\r\n        k = mathceil(POW_PRECISION / LOG_BASE + 2);\r\n      }\r\n\r\n      if (nIsBig) {\r\n        half = new BigNumber(0.5);\r\n        if (nIsNeg) n.s = 1;\r\n        nIsOdd = isOdd(n);\r\n      } else {\r\n        i = Math.abs(+valueOf(n));\r\n        nIsOdd = i % 2;\r\n      }\r\n\r\n      y = new BigNumber(ONE);\r\n\r\n      // Performs 54 loop iterations for n of 9007199254740991.\r\n      for (; ;) {\r\n\r\n        if (nIsOdd) {\r\n          y = y.times(x);\r\n          if (!y.c) break;\r\n\r\n          if (k) {\r\n            if (y.c.length > k) y.c.length = k;\r\n          } else if (isModExp) {\r\n            y = y.mod(m);    //y = y.minus(div(y, m, 0, MODULO_MODE).times(m));\r\n          }\r\n        }\r\n\r\n        if (i) {\r\n          i = mathfloor(i / 2);\r\n          if (i === 0) break;\r\n          nIsOdd = i % 2;\r\n        } else {\r\n          n = n.times(half);\r\n          round(n, n.e + 1, 1);\r\n\r\n          if (n.e > 14) {\r\n            nIsOdd = isOdd(n);\r\n          } else {\r\n            i = +valueOf(n);\r\n            if (i === 0) break;\r\n            nIsOdd = i % 2;\r\n          }\r\n        }\r\n\r\n        x = x.times(x);\r\n\r\n        if (k) {\r\n          if (x.c && x.c.length > k) x.c.length = k;\r\n        } else if (isModExp) {\r\n          x = x.mod(m);    //x = x.minus(div(x, m, 0, MODULO_MODE).times(m));\r\n        }\r\n      }\r\n\r\n      if (isModExp) return y;\r\n      if (nIsNeg) y = ONE.div(y);\r\n\r\n      return m ? y.mod(m) : k ? round(y, POW_PRECISION, ROUNDING_MODE, more) : y;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the value of this BigNumber rounded to an integer\r\n     * using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {rm}'\r\n     */\r\n    P.integerValue = function (rm) {\r\n      var n = new BigNumber(this);\r\n      if (rm == null) rm = ROUNDING_MODE;\r\n      else intCheck(rm, 0, 8);\r\n      return round(n, n.e + 1, rm);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is equal to the value of BigNumber(y, b),\r\n     * otherwise return false.\r\n     */\r\n    P.isEqualTo = P.eq = function (y, b) {\r\n      return compare(this, new BigNumber(y, b)) === 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is a finite number, otherwise return false.\r\n     */\r\n    P.isFinite = function () {\r\n      return !!this.c;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n     * otherwise return false.\r\n     */\r\n    P.isGreaterThan = P.gt = function (y, b) {\r\n      return compare(this, new BigNumber(y, b)) > 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is greater than or equal to the value of\r\n     * BigNumber(y, b), otherwise return false.\r\n     */\r\n    P.isGreaterThanOrEqualTo = P.gte = function (y, b) {\r\n      return (b = compare(this, new BigNumber(y, b))) === 1 || b === 0;\r\n\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is an integer, otherwise return false.\r\n     */\r\n    P.isInteger = function () {\r\n      return !!this.c && bitFloor(this.e / LOG_BASE) > this.c.length - 2;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n     * otherwise return false.\r\n     */\r\n    P.isLessThan = P.lt = function (y, b) {\r\n      return compare(this, new BigNumber(y, b)) < 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is less than or equal to the value of\r\n     * BigNumber(y, b), otherwise return false.\r\n     */\r\n    P.isLessThanOrEqualTo = P.lte = function (y, b) {\r\n      return (b = compare(this, new BigNumber(y, b))) === -1 || b === 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is NaN, otherwise return false.\r\n     */\r\n    P.isNaN = function () {\r\n      return !this.s;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is negative, otherwise return false.\r\n     */\r\n    P.isNegative = function () {\r\n      return this.s < 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is positive, otherwise return false.\r\n     */\r\n    P.isPositive = function () {\r\n      return this.s > 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is 0 or -0, otherwise return false.\r\n     */\r\n    P.isZero = function () {\r\n      return !!this.c && this.c[0] == 0;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n - 0 = n\r\n     *  n - N = N\r\n     *  n - I = -I\r\n     *  0 - n = -n\r\n     *  0 - 0 = 0\r\n     *  0 - N = N\r\n     *  0 - I = -I\r\n     *  N - n = N\r\n     *  N - 0 = N\r\n     *  N - N = N\r\n     *  N - I = N\r\n     *  I - n = I\r\n     *  I - 0 = I\r\n     *  I - N = N\r\n     *  I - I = N\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber minus the value of\r\n     * BigNumber(y, b).\r\n     */\r\n    P.minus = function (y, b) {\r\n      var i, j, t, xLTy,\r\n        x = this,\r\n        a = x.s;\r\n\r\n      y = new BigNumber(y, b);\r\n      b = y.s;\r\n\r\n      // Either NaN?\r\n      if (!a || !b) return new BigNumber(NaN);\r\n\r\n      // Signs differ?\r\n      if (a != b) {\r\n        y.s = -b;\r\n        return x.plus(y);\r\n      }\r\n\r\n      var xe = x.e / LOG_BASE,\r\n        ye = y.e / LOG_BASE,\r\n        xc = x.c,\r\n        yc = y.c;\r\n\r\n      if (!xe || !ye) {\r\n\r\n        // Either Infinity?\r\n        if (!xc || !yc) return xc ? (y.s = -b, y) : new BigNumber(yc ? x : NaN);\r\n\r\n        // Either zero?\r\n        if (!xc[0] || !yc[0]) {\r\n\r\n          // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n          return yc[0] ? (y.s = -b, y) : new BigNumber(xc[0] ? x :\r\n\r\n           // IEEE 754 (2008) 6.3: n - n = -0 when rounding to -Infinity\r\n           ROUNDING_MODE == 3 ? -0 : 0);\r\n        }\r\n      }\r\n\r\n      xe = bitFloor(xe);\r\n      ye = bitFloor(ye);\r\n      xc = xc.slice();\r\n\r\n      // Determine which is the bigger number.\r\n      if (a = xe - ye) {\r\n\r\n        if (xLTy = a < 0) {\r\n          a = -a;\r\n          t = xc;\r\n        } else {\r\n          ye = xe;\r\n          t = yc;\r\n        }\r\n\r\n        t.reverse();\r\n\r\n        // Prepend zeros to equalise exponents.\r\n        for (b = a; b--; t.push(0));\r\n        t.reverse();\r\n      } else {\r\n\r\n        // Exponents equal. Check digit by digit.\r\n        j = (xLTy = (a = xc.length) < (b = yc.length)) ? a : b;\r\n\r\n        for (a = b = 0; b < j; b++) {\r\n\r\n          if (xc[b] != yc[b]) {\r\n            xLTy = xc[b] < yc[b];\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      // x < y? Point xc to the array of the bigger number.\r\n      if (xLTy) t = xc, xc = yc, yc = t, y.s = -y.s;\r\n\r\n      b = (j = yc.length) - (i = xc.length);\r\n\r\n      // Append zeros to xc if shorter.\r\n      // No need to add zeros to yc if shorter as subtract only needs to start at yc.length.\r\n      if (b > 0) for (; b--; xc[i++] = 0);\r\n      b = BASE - 1;\r\n\r\n      // Subtract yc from xc.\r\n      for (; j > a;) {\r\n\r\n        if (xc[--j] < yc[j]) {\r\n          for (i = j; i && !xc[--i]; xc[i] = b);\r\n          --xc[i];\r\n          xc[j] += BASE;\r\n        }\r\n\r\n        xc[j] -= yc[j];\r\n      }\r\n\r\n      // Remove leading zeros and adjust exponent accordingly.\r\n      for (; xc[0] == 0; xc.splice(0, 1), --ye);\r\n\r\n      // Zero?\r\n      if (!xc[0]) {\r\n\r\n        // Following IEEE 754 (2008) 6.3,\r\n        // n - n = +0  but  n - n = -0  when rounding towards -Infinity.\r\n        y.s = ROUNDING_MODE == 3 ? -1 : 1;\r\n        y.c = [y.e = 0];\r\n        return y;\r\n      }\r\n\r\n      // No need to check for Infinity as +x - +y != Infinity && -x - -y != Infinity\r\n      // for finite x and y.\r\n      return normalise(y, xc, ye);\r\n    };\r\n\r\n\r\n    /*\r\n     *   n % 0 =  N\r\n     *   n % N =  N\r\n     *   n % I =  n\r\n     *   0 % n =  0\r\n     *  -0 % n = -0\r\n     *   0 % 0 =  N\r\n     *   0 % N =  N\r\n     *   0 % I =  0\r\n     *   N % n =  N\r\n     *   N % 0 =  N\r\n     *   N % N =  N\r\n     *   N % I =  N\r\n     *   I % n =  N\r\n     *   I % 0 =  N\r\n     *   I % N =  N\r\n     *   I % I =  N\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber modulo the value of\r\n     * BigNumber(y, b). The result depends on the value of MODULO_MODE.\r\n     */\r\n    P.modulo = P.mod = function (y, b) {\r\n      var q, s,\r\n        x = this;\r\n\r\n      y = new BigNumber(y, b);\r\n\r\n      // Return NaN if x is Infinity or NaN, or y is NaN or zero.\r\n      if (!x.c || !y.s || y.c && !y.c[0]) {\r\n        return new BigNumber(NaN);\r\n\r\n      // Return x if y is Infinity or x is zero.\r\n      } else if (!y.c || x.c && !x.c[0]) {\r\n        return new BigNumber(x);\r\n      }\r\n\r\n      if (MODULO_MODE == 9) {\r\n\r\n        // Euclidian division: q = sign(y) * floor(x / abs(y))\r\n        // r = x - qy    where  0 <= r < abs(y)\r\n        s = y.s;\r\n        y.s = 1;\r\n        q = div(x, y, 0, 3);\r\n        y.s = s;\r\n        q.s *= s;\r\n      } else {\r\n        q = div(x, y, 0, MODULO_MODE);\r\n      }\r\n\r\n      y = x.minus(q.times(y));\r\n\r\n      // To match JavaScript %, ensure sign of zero is sign of dividend.\r\n      if (!y.c[0] && MODULO_MODE == 1) y.s = x.s;\r\n\r\n      return y;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n * 0 = 0\r\n     *  n * N = N\r\n     *  n * I = I\r\n     *  0 * n = 0\r\n     *  0 * 0 = 0\r\n     *  0 * N = N\r\n     *  0 * I = N\r\n     *  N * n = N\r\n     *  N * 0 = N\r\n     *  N * N = N\r\n     *  N * I = N\r\n     *  I * n = I\r\n     *  I * 0 = N\r\n     *  I * N = N\r\n     *  I * I = I\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber multiplied by the value\r\n     * of BigNumber(y, b).\r\n     */\r\n    P.multipliedBy = P.times = function (y, b) {\r\n      var c, e, i, j, k, m, xcL, xlo, xhi, ycL, ylo, yhi, zc,\r\n        base, sqrtBase,\r\n        x = this,\r\n        xc = x.c,\r\n        yc = (y = new BigNumber(y, b)).c;\r\n\r\n      // Either NaN, ±Infinity or ±0?\r\n      if (!xc || !yc || !xc[0] || !yc[0]) {\r\n\r\n        // Return NaN if either is NaN, or one is 0 and the other is Infinity.\r\n        if (!x.s || !y.s || xc && !xc[0] && !yc || yc && !yc[0] && !xc) {\r\n          y.c = y.e = y.s = null;\r\n        } else {\r\n          y.s *= x.s;\r\n\r\n          // Return ±Infinity if either is ±Infinity.\r\n          if (!xc || !yc) {\r\n            y.c = y.e = null;\r\n\r\n          // Return ±0 if either is ±0.\r\n          } else {\r\n            y.c = [0];\r\n            y.e = 0;\r\n          }\r\n        }\r\n\r\n        return y;\r\n      }\r\n\r\n      e = bitFloor(x.e / LOG_BASE) + bitFloor(y.e / LOG_BASE);\r\n      y.s *= x.s;\r\n      xcL = xc.length;\r\n      ycL = yc.length;\r\n\r\n      // Ensure xc points to longer array and xcL to its length.\r\n      if (xcL < ycL) zc = xc, xc = yc, yc = zc, i = xcL, xcL = ycL, ycL = i;\r\n\r\n      // Initialise the result array with zeros.\r\n      for (i = xcL + ycL, zc = []; i--; zc.push(0));\r\n\r\n      base = BASE;\r\n      sqrtBase = SQRT_BASE;\r\n\r\n      for (i = ycL; --i >= 0;) {\r\n        c = 0;\r\n        ylo = yc[i] % sqrtBase;\r\n        yhi = yc[i] / sqrtBase | 0;\r\n\r\n        for (k = xcL, j = i + k; j > i;) {\r\n          xlo = xc[--k] % sqrtBase;\r\n          xhi = xc[k] / sqrtBase | 0;\r\n          m = yhi * xlo + xhi * ylo;\r\n          xlo = ylo * xlo + ((m % sqrtBase) * sqrtBase) + zc[j] + c;\r\n          c = (xlo / base | 0) + (m / sqrtBase | 0) + yhi * xhi;\r\n          zc[j--] = xlo % base;\r\n        }\r\n\r\n        zc[j] = c;\r\n      }\r\n\r\n      if (c) {\r\n        ++e;\r\n      } else {\r\n        zc.splice(0, 1);\r\n      }\r\n\r\n      return normalise(y, zc, e);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the value of this BigNumber negated,\r\n     * i.e. multiplied by -1.\r\n     */\r\n    P.negated = function () {\r\n      var x = new BigNumber(this);\r\n      x.s = -x.s || null;\r\n      return x;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n + 0 = n\r\n     *  n + N = N\r\n     *  n + I = I\r\n     *  0 + n = n\r\n     *  0 + 0 = 0\r\n     *  0 + N = N\r\n     *  0 + I = I\r\n     *  N + n = N\r\n     *  N + 0 = N\r\n     *  N + N = N\r\n     *  N + I = N\r\n     *  I + n = I\r\n     *  I + 0 = I\r\n     *  I + N = N\r\n     *  I + I = I\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber plus the value of\r\n     * BigNumber(y, b).\r\n     */\r\n    P.plus = function (y, b) {\r\n      var t,\r\n        x = this,\r\n        a = x.s;\r\n\r\n      y = new BigNumber(y, b);\r\n      b = y.s;\r\n\r\n      // Either NaN?\r\n      if (!a || !b) return new BigNumber(NaN);\r\n\r\n      // Signs differ?\r\n       if (a != b) {\r\n        y.s = -b;\r\n        return x.minus(y);\r\n      }\r\n\r\n      var xe = x.e / LOG_BASE,\r\n        ye = y.e / LOG_BASE,\r\n        xc = x.c,\r\n        yc = y.c;\r\n\r\n      if (!xe || !ye) {\r\n\r\n        // Return ±Infinity if either ±Infinity.\r\n        if (!xc || !yc) return new BigNumber(a / 0);\r\n\r\n        // Either zero?\r\n        // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n        if (!xc[0] || !yc[0]) return yc[0] ? y : new BigNumber(xc[0] ? x : a * 0);\r\n      }\r\n\r\n      xe = bitFloor(xe);\r\n      ye = bitFloor(ye);\r\n      xc = xc.slice();\r\n\r\n      // Prepend zeros to equalise exponents. Faster to use reverse then do unshifts.\r\n      if (a = xe - ye) {\r\n        if (a > 0) {\r\n          ye = xe;\r\n          t = yc;\r\n        } else {\r\n          a = -a;\r\n          t = xc;\r\n        }\r\n\r\n        t.reverse();\r\n        for (; a--; t.push(0));\r\n        t.reverse();\r\n      }\r\n\r\n      a = xc.length;\r\n      b = yc.length;\r\n\r\n      // Point xc to the longer array, and b to the shorter length.\r\n      if (a - b < 0) t = yc, yc = xc, xc = t, b = a;\r\n\r\n      // Only start adding at yc.length - 1 as the further digits of xc can be ignored.\r\n      for (a = 0; b;) {\r\n        a = (xc[--b] = xc[b] + yc[b] + a) / BASE | 0;\r\n        xc[b] = BASE === xc[b] ? 0 : xc[b] % BASE;\r\n      }\r\n\r\n      if (a) {\r\n        xc = [a].concat(xc);\r\n        ++ye;\r\n      }\r\n\r\n      // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n      // ye = MAX_EXP + 1 possible\r\n      return normalise(y, xc, ye);\r\n    };\r\n\r\n\r\n    /*\r\n     * If sd is undefined or null or true or false, return the number of significant digits of\r\n     * the value of this BigNumber, or null if the value of this BigNumber is ±Infinity or NaN.\r\n     * If sd is true include integer-part trailing zeros in the count.\r\n     *\r\n     * Otherwise, if sd is a number, return a new BigNumber whose value is the value of this\r\n     * BigNumber rounded to a maximum of sd significant digits using rounding mode rm, or\r\n     * ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * sd {number|boolean} number: significant digits: integer, 1 to MAX inclusive.\r\n     *                     boolean: whether to count integer-part trailing zeros: true or false.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n     */\r\n    P.precision = P.sd = function (sd, rm) {\r\n      var c, n, v,\r\n        x = this;\r\n\r\n      if (sd != null && sd !== !!sd) {\r\n        intCheck(sd, 1, MAX);\r\n        if (rm == null) rm = ROUNDING_MODE;\r\n        else intCheck(rm, 0, 8);\r\n\r\n        return round(new BigNumber(x), sd, rm);\r\n      }\r\n\r\n      if (!(c = x.c)) return null;\r\n      v = c.length - 1;\r\n      n = v * LOG_BASE + 1;\r\n\r\n      if (v = c[v]) {\r\n\r\n        // Subtract the number of trailing zeros of the last element.\r\n        for (; v % 10 == 0; v /= 10, n--);\r\n\r\n        // Add the number of digits of the first element.\r\n        for (v = c[0]; v >= 10; v /= 10, n++);\r\n      }\r\n\r\n      if (sd && x.e + 1 > n) n = x.e + 1;\r\n\r\n      return n;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the value of this BigNumber shifted by k places\r\n     * (powers of 10). Shift to the right if n > 0, and to the left if n < 0.\r\n     *\r\n     * k {number} Integer, -MAX_SAFE_INTEGER to MAX_SAFE_INTEGER inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {k}'\r\n     */\r\n    P.shiftedBy = function (k) {\r\n      intCheck(k, -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER);\r\n      return this.times('1e' + k);\r\n    };\r\n\r\n\r\n    /*\r\n     *  sqrt(-n) =  N\r\n     *  sqrt(N) =  N\r\n     *  sqrt(-I) =  N\r\n     *  sqrt(I) =  I\r\n     *  sqrt(0) =  0\r\n     *  sqrt(-0) = -0\r\n     *\r\n     * Return a new BigNumber whose value is the square root of the value of this BigNumber,\r\n     * rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n     */\r\n    P.squareRoot = P.sqrt = function () {\r\n      var m, n, r, rep, t,\r\n        x = this,\r\n        c = x.c,\r\n        s = x.s,\r\n        e = x.e,\r\n        dp = DECIMAL_PLACES + 4,\r\n        half = new BigNumber('0.5');\r\n\r\n      // Negative/NaN/Infinity/zero?\r\n      if (s !== 1 || !c || !c[0]) {\r\n        return new BigNumber(!s || s < 0 && (!c || c[0]) ? NaN : c ? x : 1 / 0);\r\n      }\r\n\r\n      // Initial estimate.\r\n      s = Math.sqrt(+valueOf(x));\r\n\r\n      // Math.sqrt underflow/overflow?\r\n      // Pass x to Math.sqrt as integer, then adjust the exponent of the result.\r\n      if (s == 0 || s == 1 / 0) {\r\n        n = coeffToString(c);\r\n        if ((n.length + e) % 2 == 0) n += '0';\r\n        s = Math.sqrt(+n);\r\n        e = bitFloor((e + 1) / 2) - (e < 0 || e % 2);\r\n\r\n        if (s == 1 / 0) {\r\n          n = '1e' + e;\r\n        } else {\r\n          n = s.toExponential();\r\n          n = n.slice(0, n.indexOf('e') + 1) + e;\r\n        }\r\n\r\n        r = new BigNumber(n);\r\n      } else {\r\n        r = new BigNumber(s + '');\r\n      }\r\n\r\n      // Check for zero.\r\n      // r could be zero if MIN_EXP is changed after the this value was created.\r\n      // This would cause a division by zero (x/t) and hence Infinity below, which would cause\r\n      // coeffToString to throw.\r\n      if (r.c[0]) {\r\n        e = r.e;\r\n        s = e + dp;\r\n        if (s < 3) s = 0;\r\n\r\n        // Newton-Raphson iteration.\r\n        for (; ;) {\r\n          t = r;\r\n          r = half.times(t.plus(div(x, t, dp, 1)));\r\n\r\n          if (coeffToString(t.c).slice(0, s) === (n = coeffToString(r.c)).slice(0, s)) {\r\n\r\n            // The exponent of r may here be one less than the final result exponent,\r\n            // e.g 0.0009999 (e-4) --> 0.001 (e-3), so adjust s so the rounding digits\r\n            // are indexed correctly.\r\n            if (r.e < e) --s;\r\n            n = n.slice(s - 3, s + 1);\r\n\r\n            // The 4th rounding digit may be in error by -1 so if the 4 rounding digits\r\n            // are 9999 or 4999 (i.e. approaching a rounding boundary) continue the\r\n            // iteration.\r\n            if (n == '9999' || !rep && n == '4999') {\r\n\r\n              // On the first iteration only, check to see if rounding up gives the\r\n              // exact result as the nines may infinitely repeat.\r\n              if (!rep) {\r\n                round(t, t.e + DECIMAL_PLACES + 2, 0);\r\n\r\n                if (t.times(t).eq(x)) {\r\n                  r = t;\r\n                  break;\r\n                }\r\n              }\r\n\r\n              dp += 4;\r\n              s += 4;\r\n              rep = 1;\r\n            } else {\r\n\r\n              // If rounding digits are null, 0{0,4} or 50{0,3}, check for exact\r\n              // result. If not, then there are further digits and m will be truthy.\r\n              if (!+n || !+n.slice(1) && n.charAt(0) == '5') {\r\n\r\n                // Truncate to the first rounding digit.\r\n                round(r, r.e + DECIMAL_PLACES + 2, 1);\r\n                m = !r.times(r).eq(x);\r\n              }\r\n\r\n              break;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      return round(r, r.e + DECIMAL_PLACES + 1, ROUNDING_MODE, m);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in exponential notation and\r\n     * rounded using ROUNDING_MODE to dp fixed decimal places.\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     */\r\n    P.toExponential = function (dp, rm) {\r\n      if (dp != null) {\r\n        intCheck(dp, 0, MAX);\r\n        dp++;\r\n      }\r\n      return format(this, dp, rm, 1);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in fixed-point notation rounding\r\n     * to dp fixed decimal places using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * Note: as with JavaScript's number type, (-0).toFixed(0) is '0',\r\n     * but e.g. (-0.00001).toFixed(0) is '-0'.\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     */\r\n    P.toFixed = function (dp, rm) {\r\n      if (dp != null) {\r\n        intCheck(dp, 0, MAX);\r\n        dp = dp + this.e + 1;\r\n      }\r\n      return format(this, dp, rm);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in fixed-point notation rounded\r\n     * using rm or ROUNDING_MODE to dp decimal places, and formatted according to the properties\r\n     * of the format or FORMAT object (see BigNumber.set).\r\n     *\r\n     * The formatting object may contain some or all of the properties shown below.\r\n     *\r\n     * FORMAT = {\r\n     *   prefix: '',\r\n     *   groupSize: 3,\r\n     *   secondaryGroupSize: 0,\r\n     *   groupSeparator: ',',\r\n     *   decimalSeparator: '.',\r\n     *   fractionGroupSize: 0,\r\n     *   fractionGroupSeparator: '\\xA0',      // non-breaking space\r\n     *   suffix: ''\r\n     * };\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     * [format] {object} Formatting options. See FORMAT pbject above.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     * '[BigNumber Error] Argument not an object: {format}'\r\n     */\r\n    P.toFormat = function (dp, rm, format) {\r\n      var str,\r\n        x = this;\r\n\r\n      if (format == null) {\r\n        if (dp != null && rm && typeof rm == 'object') {\r\n          format = rm;\r\n          rm = null;\r\n        } else if (dp && typeof dp == 'object') {\r\n          format = dp;\r\n          dp = rm = null;\r\n        } else {\r\n          format = FORMAT;\r\n        }\r\n      } else if (typeof format != 'object') {\r\n        throw Error\r\n          (bignumberError + 'Argument not an object: ' + format);\r\n      }\r\n\r\n      str = x.toFixed(dp, rm);\r\n\r\n      if (x.c) {\r\n        var i,\r\n          arr = str.split('.'),\r\n          g1 = +format.groupSize,\r\n          g2 = +format.secondaryGroupSize,\r\n          groupSeparator = format.groupSeparator || '',\r\n          intPart = arr[0],\r\n          fractionPart = arr[1],\r\n          isNeg = x.s < 0,\r\n          intDigits = isNeg ? intPart.slice(1) : intPart,\r\n          len = intDigits.length;\r\n\r\n        if (g2) i = g1, g1 = g2, g2 = i, len -= i;\r\n\r\n        if (g1 > 0 && len > 0) {\r\n          i = len % g1 || g1;\r\n          intPart = intDigits.substr(0, i);\r\n          for (; i < len; i += g1) intPart += groupSeparator + intDigits.substr(i, g1);\r\n          if (g2 > 0) intPart += groupSeparator + intDigits.slice(i);\r\n          if (isNeg) intPart = '-' + intPart;\r\n        }\r\n\r\n        str = fractionPart\r\n         ? intPart + (format.decimalSeparator || '') + ((g2 = +format.fractionGroupSize)\r\n          ? fractionPart.replace(new RegExp('\\\\d{' + g2 + '}\\\\B', 'g'),\r\n           '$&' + (format.fractionGroupSeparator || ''))\r\n          : fractionPart)\r\n         : intPart;\r\n      }\r\n\r\n      return (format.prefix || '') + str + (format.suffix || '');\r\n    };\r\n\r\n\r\n    /*\r\n     * Return an array of two BigNumbers representing the value of this BigNumber as a simple\r\n     * fraction with an integer numerator and an integer denominator.\r\n     * The denominator will be a positive non-zero value less than or equal to the specified\r\n     * maximum denominator. If a maximum denominator is not specified, the denominator will be\r\n     * the lowest value necessary to represent the number exactly.\r\n     *\r\n     * [md] {number|string|BigNumber} Integer >= 1, or Infinity. The maximum denominator.\r\n     *\r\n     * '[BigNumber Error] Argument {not an integer|out of range} : {md}'\r\n     */\r\n    P.toFraction = function (md) {\r\n      var d, d0, d1, d2, e, exp, n, n0, n1, q, r, s,\r\n        x = this,\r\n        xc = x.c;\r\n\r\n      if (md != null) {\r\n        n = new BigNumber(md);\r\n\r\n        // Throw if md is less than one or is not an integer, unless it is Infinity.\r\n        if (!n.isInteger() && (n.c || n.s !== 1) || n.lt(ONE)) {\r\n          throw Error\r\n            (bignumberError + 'Argument ' +\r\n              (n.isInteger() ? 'out of range: ' : 'not an integer: ') + valueOf(n));\r\n        }\r\n      }\r\n\r\n      if (!xc) return new BigNumber(x);\r\n\r\n      d = new BigNumber(ONE);\r\n      n1 = d0 = new BigNumber(ONE);\r\n      d1 = n0 = new BigNumber(ONE);\r\n      s = coeffToString(xc);\r\n\r\n      // Determine initial denominator.\r\n      // d is a power of 10 and the minimum max denominator that specifies the value exactly.\r\n      e = d.e = s.length - x.e - 1;\r\n      d.c[0] = POWS_TEN[(exp = e % LOG_BASE) < 0 ? LOG_BASE + exp : exp];\r\n      md = !md || n.comparedTo(d) > 0 ? (e > 0 ? d : n1) : n;\r\n\r\n      exp = MAX_EXP;\r\n      MAX_EXP = 1 / 0;\r\n      n = new BigNumber(s);\r\n\r\n      // n0 = d1 = 0\r\n      n0.c[0] = 0;\r\n\r\n      for (; ;)  {\r\n        q = div(n, d, 0, 1);\r\n        d2 = d0.plus(q.times(d1));\r\n        if (d2.comparedTo(md) == 1) break;\r\n        d0 = d1;\r\n        d1 = d2;\r\n        n1 = n0.plus(q.times(d2 = n1));\r\n        n0 = d2;\r\n        d = n.minus(q.times(d2 = d));\r\n        n = d2;\r\n      }\r\n\r\n      d2 = div(md.minus(d0), d1, 0, 1);\r\n      n0 = n0.plus(d2.times(n1));\r\n      d0 = d0.plus(d2.times(d1));\r\n      n0.s = n1.s = x.s;\r\n      e = e * 2;\r\n\r\n      // Determine which fraction is closer to x, n0/d0 or n1/d1\r\n      r = div(n1, d1, e, ROUNDING_MODE).minus(x).abs().comparedTo(\r\n          div(n0, d0, e, ROUNDING_MODE).minus(x).abs()) < 1 ? [n1, d1] : [n0, d0];\r\n\r\n      MAX_EXP = exp;\r\n\r\n      return r;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return the value of this BigNumber converted to a number primitive.\r\n     */\r\n    P.toNumber = function () {\r\n      return +valueOf(this);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber rounded to sd significant digits\r\n     * using rounding mode rm or ROUNDING_MODE. If sd is less than the number of digits\r\n     * necessary to represent the integer part of the value in fixed-point notation, then use\r\n     * exponential notation.\r\n     *\r\n     * [sd] {number} Significant digits. Integer, 1 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n     */\r\n    P.toPrecision = function (sd, rm) {\r\n      if (sd != null) intCheck(sd, 1, MAX);\r\n      return format(this, sd, rm, 2);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in base b, or base 10 if b is\r\n     * omitted. If a base is specified, including base 10, round according to DECIMAL_PLACES and\r\n     * ROUNDING_MODE. If a base is not specified, and this BigNumber has a positive exponent\r\n     * that is equal to or greater than TO_EXP_POS, or a negative exponent equal to or less than\r\n     * TO_EXP_NEG, return exponential notation.\r\n     *\r\n     * [b] {number} Integer, 2 to ALPHABET.length inclusive.\r\n     *\r\n     * '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\r\n     */\r\n    P.toString = function (b) {\r\n      var str,\r\n        n = this,\r\n        s = n.s,\r\n        e = n.e;\r\n\r\n      // Infinity or NaN?\r\n      if (e === null) {\r\n        if (s) {\r\n          str = 'Infinity';\r\n          if (s < 0) str = '-' + str;\r\n        } else {\r\n          str = 'NaN';\r\n        }\r\n      } else {\r\n        if (b == null) {\r\n          str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n           ? toExponential(coeffToString(n.c), e)\r\n           : toFixedPoint(coeffToString(n.c), e, '0');\r\n        } else if (b === 10) {\r\n          n = round(new BigNumber(n), DECIMAL_PLACES + e + 1, ROUNDING_MODE);\r\n          str = toFixedPoint(coeffToString(n.c), n.e, '0');\r\n        } else {\r\n          intCheck(b, 2, ALPHABET.length, 'Base');\r\n          str = convertBase(toFixedPoint(coeffToString(n.c), e, '0'), 10, b, s, true);\r\n        }\r\n\r\n        if (s < 0 && n.c[0]) str = '-' + str;\r\n      }\r\n\r\n      return str;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return as toString, but do not accept a base argument, and include the minus sign for\r\n     * negative zero.\r\n     */\r\n    P.valueOf = P.toJSON = function () {\r\n      return valueOf(this);\r\n    };\r\n\r\n\r\n    P._isBigNumber = true;\r\n\r\n    if (configObject != null) BigNumber.set(configObject);\r\n\r\n    return BigNumber;\r\n  }\r\n\r\n\r\n  // PRIVATE HELPER FUNCTIONS\r\n\r\n  // These functions don't need access to variables,\r\n  // e.g. DECIMAL_PLACES, in the scope of the `clone` function above.\r\n\r\n\r\n  function bitFloor(n) {\r\n    var i = n | 0;\r\n    return n > 0 || n === i ? i : i - 1;\r\n  }\r\n\r\n\r\n  // Return a coefficient array as a string of base 10 digits.\r\n  function coeffToString(a) {\r\n    var s, z,\r\n      i = 1,\r\n      j = a.length,\r\n      r = a[0] + '';\r\n\r\n    for (; i < j;) {\r\n      s = a[i++] + '';\r\n      z = LOG_BASE - s.length;\r\n      for (; z--; s = '0' + s);\r\n      r += s;\r\n    }\r\n\r\n    // Determine trailing zeros.\r\n    for (j = r.length; r.charCodeAt(--j) === 48;);\r\n\r\n    return r.slice(0, j + 1 || 1);\r\n  }\r\n\r\n\r\n  // Compare the value of BigNumbers x and y.\r\n  function compare(x, y) {\r\n    var a, b,\r\n      xc = x.c,\r\n      yc = y.c,\r\n      i = x.s,\r\n      j = y.s,\r\n      k = x.e,\r\n      l = y.e;\r\n\r\n    // Either NaN?\r\n    if (!i || !j) return null;\r\n\r\n    a = xc && !xc[0];\r\n    b = yc && !yc[0];\r\n\r\n    // Either zero?\r\n    if (a || b) return a ? b ? 0 : -j : i;\r\n\r\n    // Signs differ?\r\n    if (i != j) return i;\r\n\r\n    a = i < 0;\r\n    b = k == l;\r\n\r\n    // Either Infinity?\r\n    if (!xc || !yc) return b ? 0 : !xc ^ a ? 1 : -1;\r\n\r\n    // Compare exponents.\r\n    if (!b) return k > l ^ a ? 1 : -1;\r\n\r\n    j = (k = xc.length) < (l = yc.length) ? k : l;\r\n\r\n    // Compare digit by digit.\r\n    for (i = 0; i < j; i++) if (xc[i] != yc[i]) return xc[i] > yc[i] ^ a ? 1 : -1;\r\n\r\n    // Compare lengths.\r\n    return k == l ? 0 : k > l ^ a ? 1 : -1;\r\n  }\r\n\r\n\r\n  /*\r\n   * Check that n is a primitive number, an integer, and in range, otherwise throw.\r\n   */\r\n  function intCheck(n, min, max, name) {\r\n    if (n < min || n > max || n !== mathfloor(n)) {\r\n      throw Error\r\n       (bignumberError + (name || 'Argument') + (typeof n == 'number'\r\n         ? n < min || n > max ? ' out of range: ' : ' not an integer: '\r\n         : ' not a primitive number: ') + String(n));\r\n    }\r\n  }\r\n\r\n\r\n  // Assumes finite n.\r\n  function isOdd(n) {\r\n    var k = n.c.length - 1;\r\n    return bitFloor(n.e / LOG_BASE) == k && n.c[k] % 2 != 0;\r\n  }\r\n\r\n\r\n  function toExponential(str, e) {\r\n    return (str.length > 1 ? str.charAt(0) + '.' + str.slice(1) : str) +\r\n     (e < 0 ? 'e' : 'e+') + e;\r\n  }\r\n\r\n\r\n  function toFixedPoint(str, e, z) {\r\n    var len, zs;\r\n\r\n    // Negative exponent?\r\n    if (e < 0) {\r\n\r\n      // Prepend zeros.\r\n      for (zs = z + '.'; ++e; zs += z);\r\n      str = zs + str;\r\n\r\n    // Positive exponent\r\n    } else {\r\n      len = str.length;\r\n\r\n      // Append zeros.\r\n      if (++e > len) {\r\n        for (zs = z, e -= len; --e; zs += z);\r\n        str += zs;\r\n      } else if (e < len) {\r\n        str = str.slice(0, e) + '.' + str.slice(e);\r\n      }\r\n    }\r\n\r\n    return str;\r\n  }\r\n\r\n\r\n  // EXPORT\r\n\r\n\r\n  BigNumber = clone();\r\n  BigNumber['default'] = BigNumber.BigNumber = BigNumber;\r\n\r\n  // AMD.\r\n  if (typeof define == 'function' && define.amd) {\r\n    define(function () { return BigNumber; });\r\n\r\n  // Node.js and other environments that support module.exports.\r\n  } else if (typeof module != 'undefined' && module.exports) {\r\n    module.exports = BigNumber;\r\n\r\n  // Browser.\r\n  } else {\r\n    if (!globalObject) {\r\n      globalObject = typeof self != 'undefined' && self ? self : window;\r\n    }\r\n\r\n    globalObject.BigNumber = BigNumber;\r\n  }\r\n})(this);\r\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const NanoCurrency = require('nanocurrency')\n// When the parent theard requires it, render the HTML\nself.addEventListener(\"message\", async (message) => {\n  const { blockHash, workerIndex, workerCount, workThreshold } = message.data;\n  const result = await NanoCurrency.computeWork(blockHash, { workThreshold, workerIndex, workerCount });\n  self.postMessage(result);\n});"],"names":["A","I","i","g","blake2b","C","blake2bInit","r","blake2bUpdate","o","blake2bFinal","n","t","Promise","next","throw","done","value","then","apply","h","label","sent","trys","ops","return","Symbol","iterator","TypeError","call","pop","length","push","e","a","exports","document","currentScript","src","hasOwnProperty","arguments","thisProgram","quit","preRun","postRun","window","importScripts","process","Q","B","__dirname","read","V","normalize","readFileSync","toString","readBinary","buffer","Uint8Array","c","argv","replace","slice","on","z","$","exit","inspect","j","readbuffer","scriptArgs","self","location","href","indexOf","substr","lastIndexOf","XMLHttpRequest","open","send","responseText","responseType","response","readAsync","onload","status","onerror","setWindowTitle","title","f","print","console","log","bind","E","printErr","warn","w","debugger","WebAssembly","u","s","l","S","string","q","y","charCodeAt","array","G","set","W","subarray","F","decode","String","fromCharCode","T","TextDecoder","U","D","d","TOTAL_MEMORY","k","shift","dynCall_v","dynCall_vi","Memory","initial","maximum","ArrayBuffer","HEAP8","Int8Array","HEAP16","Int16Array","HEAP32","Int32Array","HEAPU8","HEAPU16","Uint16Array","HEAPU32","Uint32Array","HEAPF32","Float32Array","HEAPF64","Float64Array","H","p","v","Y","M","K","unshift","b","x","preloadedImages","preloadedAudios","m","N","prototype","startsWith","L","R","locateFile","J","wasmBinary","P","fetch","credentials","ok","arrayBuffer","catch","X","asm","monitorRunDependencies","instance","instantiate","env","global","NaN","Infinity","Math","asm2wasm","instantiateWasm","instantiateStreaming","join","memory","table","Table","element","__memory_base","__table_base","O","atob","charAt","Buffer","from","byteOffset","byteLength","Error","Z","_emscripten_work","stackAlloc","stackRestore","stackSave","name","message","_","calledRun","onRuntimeInitialized","setStatus","setTimeout","onAbort","JSON","stringify","cwrap","every","constructor","run","abort","preInit","noExitRuntime","Object","require","promisify","randomFill","crypto","getRandomValues","toUpperCase","parseInt","ceil","valid","publicKeyBytes","test","reverse","pow","isLessThanOrEqualTo","Number","isInteger","threshold","blockHash","work","isGreaterThanOrEqualTo","loaded","assign","workerIndex","workerCount","workThreshold","floor","AA","IA","iA","gA","CA","rA","oA","nA","tA","hA","eA","aA","QA","BA","fA","EA","reduce","wA","DataView","setUint32","uA","sA","useNanoPrefix","hex","raw","nano","knano","Nano","NANO","KNano","MNano","cA","lA","clone","EXPONENTIAL_AT","DECIMAL_PLACES","SA","to","endsWith","dividedBy","multipliedBy","padStart","FA","UA","account","previous","representative","balance","link","GA","yA","hash","secretKey","DA","signature","publicKey","dA","kA","block","type","link_as_account","Unit","checkAddress","checkAmount","checkHash","checkIndex","checkKey","checkSeed","checkSignature","checkThreshold","checkWork","computeWork","convert","createBlock","deriveAddress","derivePublicKey","deriveSecretKey","generateSeed","hashBlock","signBlock","validateWork","verifyBlock","NanoCurrency","addEventListener","data","result","postMessage"],"sourceRoot":"webpack:///"}